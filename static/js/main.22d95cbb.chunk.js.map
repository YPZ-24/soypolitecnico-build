{"version":3,"sources":["resources/engranesBlancos.png","resources/img1.jpg","resources/img2.jpg","resources/img3.jpg","resources/tendederos.jpg","pages/Home.tsx","components/inputs/MyPasswordInput.tsx","components/inputs/MyEmailInput.tsx","components/inputs/MySubmit.tsx","yup-schemas/user-schema.ts","material-ui/formStyles.tsx","material-ui/linkStyle.tsx","fetchMethods/FETCH.ts","pages/SignIn.tsx","components/inputs/MySelect.tsx","components/inputs/MyTextInput.tsx","pages/SignUp.tsx","yup-schemas/qualificationOnline-schema.tsx","components/inputs/MyTextArea.tsx","components/inputs/MyCheckBoxListItem.tsx","components/SelectSubject.tsx","components/SelectTeachers.tsx","pages/QualificationOnlineForm.tsx","components/inputs/MySearchBar.tsx","DonkeyIcon.tsx","components/commentCard/RatingComment.tsx","components/commentCard/DeleteCommentButton.tsx","components/commentCard/ToolTipInfo.tsx","components/commentCard/CommentText.tsx","components/commentCard/CommentCard.tsx","components/teacher/TeacherCommentsList.tsx","components/teacher/TeacherProfileLink.tsx","pages/TeacherSearcher.tsx","components/user/TotalQualificationsText.tsx","pages/UserComments.tsx","components/teacher/TeacherChart.tsx","components/teacher/TeacherAvatarScored.tsx","components/GossipAccordion.tsx","components/ListGossips.tsx","pages/TeacherProfile.tsx","routes/PublicRoute.tsx","routes/ProtectedRoute.tsx","yup-schemas/teacher-schema.ts","pages/AddTeacher.tsx","yup-schemas/resetPassword-schema.ts","pages/ResetPassword.tsx","pages/NotFound.tsx","pages/EmailResetPassword.tsx","pages/UserSettings.tsx","pages/DeleteAccount.tsx","components/info/Decalogue.tsx","components/info/Banner.tsx","components/info/Contact.tsx","components/info/Footer.tsx","components/info/TeacherEvaluation.tsx","components/info/ExtraCredits.tsx","pages/Info.tsx","pages/Gossips.tsx","yup-schemas/gossip-schema.ts","pages/GossipForm.tsx","components/adminForms/OptionsCell.tsx","components/adminForms/DinamicRow.tsx","yup-schemas/subject-schema.ts","components/subject/UpdateSubject.tsx","components/adminForms/SearchBar.tsx","components/subject/SubjectsTable.tsx","components/subject/AddSubject.tsx","components/adminForms/AddRelForm.tsx","components/adminForms/SelectData.tsx","yup-schemas/rels-schema.ts","pages/Subjects.tsx","components/teacher/UpdateTeacher.tsx","components/teacher/TeachersTable.tsx","components/teacher/AddTeacher.tsx","pages/Teachers.tsx","yup-schemas/school-schema.ts","components/school/UpdateSchool.tsx","components/school/SchoolsTable.tsx","components/school/AddSchool.tsx","pages/Schools.tsx","yup-schemas/career-schema.ts","components/career/UpdateCareer.tsx","components/career/CareersTable.tsx","components/career/AddCareer.tsx","pages/Careers.tsx","components/roles/FormFindUser.tsx","components/roles/FormAddRole.tsx","components/roles/FormFindUserByRole.tsx","components/roles/UsersTable.tsx","pages/Roles.tsx","routes/Routes.tsx","components/user/LogOutButton.tsx","components/user/NickNameText.tsx","components/navigation/RoleLinks.tsx","components/navigation/MyAppBar.tsx","components/navigation/DrawerListItem.tsx","components/navigation/MyDrawer.tsx","components/navigation/Navigation.tsx","components/navigation/ScrollTopFab.tsx","App.tsx","material-ui/themeConfig.tsx","index.tsx"],"names":["module","exports","useStyle","makeStyles","theme","textGradient","background","palette","secondary","light","dark","WebkitBackgroundClip","WebkitTextFillColor","fontWeight","fontSize","borderWidth","borderColor","borderTopStyle","borderBottomStyle","padding","spacing","subtitle","display","textAlign","marginBottom","conte","margin","img","backgroundSize","height","width","cards","position","top","txtDecalogo","fontFamily","Home","classes","Grid","container","style","paddingTop","zIndex","className","item","xs","Typography","align","variant","color","alt","src","img1","img2","img3","MyPasswordInput","name","label","useField","field","meta","touched","error","TextField","fullWidth","type","helperText","MyEmailInput","submit","borderRadius","MySubmit","value","Button","endIcon","CreateUserS","yup","shape","nickName","required","max","idSchool","idCareer","email","password","min","confirmPassword","oneOf","DeleteAccountS","SignInUserS","AddRoleS","idRole","SearchNickNameS","containerForm","flexDirection","alignItems","form","marginTop","link","textDecoration","grey","common","black","URL","getToken","token","sessionStorage","getItem","a","method","path","body","console","log","fetch","JSON","stringify","headers","res","json","data","message","FETCH","SignIn","setIsAuthenticated","enqueueSnackbar","useSnackbar","history","useHistory","formClasses","formStyles","linkClasses","LinkStyle","user","setItem","push","Container","maxWidth","initialValues","validationSchema","onSubmit","values","handleSubmit","Box","my","to","MySelect","children","id","onChange","FormControl","InputLabel","htmlFor","NativeSelect","e","target","aria-label","FormHelperText","MyTextInput","SignUp","useState","careers","setCareers","schools","setSchools","school","setSchool","status","resCareers","resSchools","_id","useEffect","getCareers","getSchools","component","handleOnSubmit","map","s","key","schoolName","c","careerName","CreateQualificationOnlineS","Yup","idTeacher","idSubject","learn","isEasy","answer","sentDocuments","madeVideocalls","dissapear","beFair","comment","matches","MyTextArea","multiline","rows","size","listItem","MyCheckBoxListItem","ListItem","dense","button","FormControlLabel","control","Checkbox","SelectSubjects","setSubjects","getTeacherSubjects","getSubjects","subjects","subjectName","SelectTeachers","setIDTeacher","teachers","setTeachers","getTeachers","t","teacherName","QualificationOnlineForm","teacherID","setTeacherID","linkStyle","SelectSubject","List","search","MySearchBar","options","placeholder","optionNameField","Autocomplete","freeSolo","getOptionLabel","opcion","renderInput","params","InputProps","DonkeyIcon","props","SvgIcon","viewBox","d","RatingComment","rank","idComment","React","rankValue","setRankValue","Rating","icon","disabled","ml","handleRank","DeleteCommentButton","getUserComments","closeSnackbar","confirmActions","autoFocus","onClick","handleDelete","IconButton","action","ToolTipInfo","createdAt","CommentText","substr","commentText","setCommentText","gutterBottom","length","card","actionsCardHeader","commentCardHeader","white","paddingBottom","iconWhite","cardActions","justifyContent","CommentCard","prop","subject","currentUser","Card","raised","CardHeader","title","titleTypographyProps","Tooltip","enterTouchDelay","placement","CardContent","CardActions","TeacherCommentsList","userComments","setTotalComments","comments","setComments","colors","getColorRandom","colorRandom","Math","round","random","getTeacherComments","getComments","TeacherProfileLink","linkValue","startIcon","TeacherSearcher","v","undefined","TotalQualificationsText","totalComments","total","setTotal","getTotal","useStyles","createStyles","fab","bottom","right","divider","UserComments","Divider","Fab","Add","generateColorsGradients","canvas","ctx","getContext","backgroundColors","i","hue","color1","color2","gradient","createLinearGradient","addColorStop","ChartTeacherQualifications","borderColors","totalColors","increase","hueStart","generateColors","dataLabels","dataValues","setDataValues","getChartData","labels","datasets","backgroundColor","hoverBorderColor","responsive","scales","xAxes","ticks","beginAtZero","legend","text","yellowBadge","redBadge","greenBadge","TeacherAvatarScored","score","setScore","getTeacherScore","Badge","badge","overlap","badgeContent","showZero","accordion","GossipAccordion","gossip","Accordion","AccordionSummary","expandIcon","AccordionDetails","ListGossips","gossips","setGossips","getGossips","g","mt","TeacherProfile","useParams","TeacherNameText","md","setTeacherName","getTeacherName","PublicRoute","exact","ProtectedRoute","AddTeacherS","test","this","parent","CreateTeacherS","AddTeacher","isNewTeacher","setIsNewTeacher","goBack","AddTeacherField","ResetPasswordS","newPassword","ResetPWDEmailS","ResetPassword","idUser","removeItem","text404","NotFound","EmailResetPassword","openBackdrop","setOpenBackdrop","Backdrop","open","CircularProgress","UserSettings","setUser","getUser","DeleteAccount","deleteUser","Decalogue","Baneer","contactItem","Contact","sm","footer","primary","Footer","sliderLabel","conteSlider","TeacherEvaluation","Slider","markLabel","orientation","aria-labelledby","defaultValue","marks","ExtraCredits","mb","href","container1","container2","Info","engranes","Banner","Gossips","tendederos","createGossipS","GossipForm","OptionsCell","setIsUpdating","deleteFunction","btnIdForm","option","setOption","clickUpdateForm","btnSend","document","getElementById","click","TableCell","addEventListener","DinamicRow","xName","updateForm","setChecked","checked","isUpdating","TableRow","inputProps","CreateSubjectS","UpdateForm","idSubmit","hidden","SearchBar","setFilteredData","searchedW","setSearchedW","newData","filter","toLowerCase","includes","Tabla","fSubjects","setFSubjects","TableContainer","Table","TableBody","UpdateSubject","deleteSubject","AddForm","AddRel","getRelsData","selectData","fetchPath","rels","forEach","r","SelectData","pathData","fieldOption","RelSchoolS","RelSubjectS","Subjects","selectSchools","AddSubject","SubjectsTable","teacher","fTeachers","setFTeachers","UpdateTeacher","Teachers","selectSubjects","sort","getRelTeachers","TeachersTable","CreateSchoolS","fSchools","setFSchools","UpdateSchool","deleteSchool","Schools","AddSchool","SchoolsTable","createCareerS","career","fCareers","setFCareers","UpdateCareer","deleteCareer","Careers","AddCareer","CareersTable","FormFindUser","FormAddRole","FormFindUserByRole","setUsers","UsersTable","users","u","handleBlock","Roles","Routes","LogOutButton","NickNameText","setNickName","getNickName","Link","AdminLinks","CapturerLinks","RoleLinks","role","setRole","getRole","flexGrow","appBar","menuButton","marginRight","MyAppBar","isAuthenticated","handleOpenDrawer","appBarLinks","appBarLinksAuthFalse","appBarLinksAuthTrue","AppBar","Toolbar","edge","noWrap","DrawerListItem","ListItemIcon","ListItemText","MyDrawer","openDrawer","drawerList","Drawer","onClose","Navigation","setOpenDrawer","ScrollTopFab","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","querySelector","scrollIntoView","behavior","block","App","createMuiTheme","main","overrides","MuiCssBaseline","ReactDOM","render","ThemeProvider","CssBaseline","anchorOrigin","vertical","horizontal"],"mappings":"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","file":"static/js/main.22d95cbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/engranesBlancos.55d46b22.png\";","module.exports = __webpack_public_path__ + \"static/media/img1.eb9d76db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.6ac60f1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.11b05de6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tendederos.10fdd0ca.jpg\";","import React from 'react';\r\nimport {makeStyles, Theme, Typography, Grid} from '@material-ui/core';\r\nimport img1 from '../resources/img1.jpg';\r\nimport img2 from '../resources/img2.jpg';\r\nimport img3 from '../resources/img3.jpg';\r\nimport '../material-ui/info.css';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    textGradient: {\r\n        background: `linear-gradient(90deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.dark} 100%)`,\r\n        WebkitBackgroundClip: 'text',\r\n        WebkitTextFillColor: 'transparent',\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        borderWidth: '3px',\r\n        borderColor: 'white',\r\n        borderTopStyle: 'solid',\r\n        borderBottomStyle: 'solid',\r\n        padding: theme.spacing(2,0,2,0),\r\n    },\r\n    subtitle: {\r\n      display: 'block',\r\n      textAlign: 'center',\r\n      marginBottom: '50px'\r\n    },\r\n    conte:{\r\n        display:'block',\r\n        textAlign: 'center',\r\n        background: 'rgba(255,255,255,0.6)',\r\n        margin: theme.spacing(2,0,2,0),\r\n    },\r\n    img:{\r\n        backgroundSize: 'cover',\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    cards:{\r\n        position: 'sticky',\r\n        top: 0,\r\n        height:'100vh'\r\n    },\r\n    txtDecalogo:{\r\n        textAlign:'center',\r\n        fontFamily: 'Encode Sans Condensed'\r\n    }\r\n}));\r\n\r\nfunction Home(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Grid container style={{paddingTop:'50px'}} >\r\n            \r\n            <Grid style={{zIndex:100, position: 'sticky', top: '150px'}} className={classes.conte} item xs={12}>\r\n                <Typography display=\"inline\" style={{zIndex:100}} align=\"center\" variant=\"h1\" color=\"initial\" className={classes.textGradient}>Soy Politecnico</Typography>\r\n            </Grid>\r\n\r\n            <Grid style={{ zIndex:1}} item xs={12} className={classes.subtitle}>\r\n              <Typography variant=\"overline\" color=\"initial\">Una pagina de los estudiantes, para los estudiantes</Typography>\r\n            </Grid>\r\n\r\n            {/*Aquí inician las fotos*/}\r\n\r\n            <Grid style={{ zIndex:2}} className={classes.cards} item xs={12}>\r\n                <img alt=\"imageBackgound-1\" className={classes.img} src={img1}/>\r\n            </Grid>\r\n\r\n            <Grid style={{ zIndex:3}} className={classes.cards} item xs={12}>\r\n                <img alt=\"imageBackgound-2\" className={classes.img} src={img2}/>\r\n            </Grid>\r\n\r\n            <Grid style={{ zIndex:4}} className={classes.cards} item xs={12}>\r\n                <img alt=\"imageBackgound-3\" className={classes.img} src={img3}/>\r\n            </Grid>\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { TextField} from '@material-ui/core';\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n}\r\n\r\nconst MyPasswordInput = ({name, label} : Props) => {\r\n    const[field, meta] = useField(name);\r\n    return(\r\n        <> \r\n            {meta.touched && meta.error \r\n                ? \r\n                <TextField fullWidth type=\"password\" label={label} error helperText={meta.error} {...field} />    \r\n                : \r\n                <TextField fullWidth type=\"password\" label={label} helperText=\"Minimo 8 caracteres\" {...field} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPasswordInput;\r\n","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport {TextField} from '@material-ui/core';\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n}\r\n\r\nconst MyEmailInput = ({name, label} : Props) => {\r\n    const[field, meta] = useField(name);\r\n    return(\r\n        <> \r\n            {meta.touched && meta.error \r\n                ? \r\n                <TextField fullWidth type=\"email\" label={label} error helperText={meta.error} {...field}/>    \r\n                : \r\n                <TextField fullWidth type=\"email\" label={label} {...field}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyEmailInput;\r\n\r\n","import React from 'react';\r\nimport { Button, makeStyles, Theme } from '@material-ui/core';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    submit: {\r\n        margin: theme.spacing(3,0,0,0),\r\n        borderRadius: theme.spacing(5),\r\n        background: `linear-gradient(90deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.dark} 100%)`,\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    value:string, \r\n}\r\n\r\nconst MySubmit = ({value} : Props) => {\r\n    const classes = useStyle();\r\n    return(\r\n        <Button type=\"submit\" className={classes.submit} fullWidth endIcon={<SendRoundedIcon/>} variant=\"contained\" color=\"secondary\">{value}</Button>\r\n    )\r\n}\r\n\r\n\r\nexport default MySubmit;","import * as yup from 'yup'\r\n\r\nexport const CreateUserS = yup.object().shape({\r\n    nickName: yup.string().required().max(30),\r\n    idSchool: yup.string().required(),\r\n    idCareer: yup.string().required(),\r\n    email: yup.string().required().email().max(320),\r\n    password: yup.string().required().max(50).min(8),\r\n    confirmPassword: yup.string().required().max(50).min(8).oneOf([yup.ref('password')], 'Passwords must match'),\r\n});\r\n\r\nexport const DeleteAccountS = yup.object().shape({\r\n    password: yup.string().required().max(50).min(8),\r\n});\r\n\r\nexport const SignInUserS = yup.object().shape({\r\n    email: yup.string().email().required().max(320),\r\n    password: yup.string().required().max(50).min(8),\r\n});\r\n\r\nexport const AddRoleS = yup.object().shape({\r\n    idRole: yup.string().required()\r\n})\r\n\r\n\r\nexport const SearchNickNameS = yup.object().shape({\r\n    nickName: yup.string().required().max(30)\r\n})","import {makeStyles, Theme} from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    containerForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default useStyle;","import {makeStyles, Theme} from '@material-ui/core/styles';\r\n\r\n//Estos estilos no los usa appBar\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    link:{\r\n        textDecoration: 'none',\r\n        color: theme.palette.grey[600],\r\n        '&:hover':{\r\n            color: theme.palette.common.black\r\n        }\r\n    }\r\n}));\r\n\r\nexport default useStyle;","const URL = `https://soypolitecnico.org/api/gn2/v2/`;\r\n\r\nconsole.log(URL);\r\n\r\nfunction getToken(){\r\n    let token = sessionStorage.getItem('token');\r\n    if(token) return token;\r\n    else return '';\r\n}\r\n\r\ntype fetchType = {\r\n    method: string,\r\n    path: string,\r\n    body?: Object,\r\n}\r\n\r\nasync function FETCH ({method, path, body}: fetchType){\r\n    console.log(URL+path);\r\n    try{\r\n        const res = await fetch(URL+path, {\r\n        method: method,\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': getToken()\r\n        }\r\n        });\r\n        let data;\r\n        data = await res.json();\r\n        return data;\r\n    }catch(e){\r\n        console.log(e);\r\n        e.message = \"Fetch failed\"\r\n        return e\r\n    }\r\n}\r\n\r\nexport default FETCH;","import React from 'react';\r\nimport MyPasswordInput from '../components/inputs/MyPasswordInput';\r\nimport MyEmailInput from '../components/inputs/MyEmailInput';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport {Grid, Typography, Container, Box} from '@material-ui/core'\r\nimport {Formik, Form} from 'formik';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {SignInUserS} from '../yup-schemas/user-schema';\r\nimport { useSnackbar } from 'notistack';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport LinkStyle from '../material-ui/linkStyle';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { SignInT } from '../types/user-type';\r\n\r\ntype props = {\r\n    setIsAuthenticated: (arg0: boolean) => void;\r\n}\r\n\r\nfunction SignIn({setIsAuthenticated} : props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const formClasses = formStyles();\r\n    const linkClasses = LinkStyle();\r\n\r\n    async function handleSubmit(user: SignInT){\r\n        const res = await FETCH({method:'POST', path:`signin`, body:user})\r\n        if(res.token){\r\n            sessionStorage.setItem(\"token\", 'Bearer '+ res.token);\r\n            history.push('/teacherSearcher');\r\n            setIsAuthenticated(true);\r\n        }else{\r\n            enqueueSnackbar(res.message);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <Grid container className={formClasses.containerForm} >\r\n                <Typography variant=\"h5\" color=\"initial\">Sign In</Typography>\r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues = {{email: '', password: '',}}\r\n                        validationSchema={SignInUserS}\r\n                        onSubmit = {(values)=>{\r\n                           handleSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={formClasses.form} >\r\n                            <MyEmailInput label=\"Correo electronico\" name=\"email\" />\r\n                            <MyPasswordInput label=\"Contraseña\" name=\"password\" />\r\n                            <MySubmit value=\"Enviar\" />\r\n                        </Form>\r\n                    </Formik>\r\n                    <Box my={2} >\r\n                        <Link to=\"/resetPassword\" className={linkClasses.link}>\r\n                            <Typography align=\"center\" style={{width: '100%'}} variant=\"body2\">Recupera tu contraseña</Typography>\r\n                        </Link>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { FormControl, InputLabel, NativeSelect, FormHelperText } from '@material-ui/core';\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n    children: React.ReactNode,\r\n    id: string,\r\n    onChange?: (arg0: string) => void\r\n}\r\n\r\nconst MySelect = ({name, label, children, id, onChange} : Props) => {\r\n    const [field, meta] = useField(name);\r\n    return(\r\n        <>\r\n            <FormControl fullWidth>\r\n                <InputLabel htmlFor={id}>{label}</InputLabel>\r\n                <NativeSelect {...field} onChange={(e)=>{\r\n                    if(onChange) onChange(e.target.value)\r\n                    field.onChange(e)\r\n                }}>\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    {children}\r\n                </NativeSelect>\r\n                {meta.touched && meta.error ? <FormHelperText error>{meta.error}</FormHelperText> : null}\r\n            </FormControl>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default MySelect;\r\n\r\n","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { TextField } from '@material-ui/core';\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n}\r\n\r\nconst MyTextInput = ({label, name} : Props) => {\r\n    const[field, meta] = useField(name);\r\n    return(\r\n        <> \r\n            {meta.touched && meta.error \r\n                ? \r\n                <TextField fullWidth label={label} error helperText={meta.error} {...field} />    \r\n                : \r\n                <TextField fullWidth label={label} {...field} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyTextInput;","import React, { useEffect, useState } from 'react';\r\nimport MySelect from '../components/inputs/MySelect';\r\nimport MyEmailInput from '../components/inputs/MyEmailInput';\r\nimport MyPasswordInput from '../components/inputs/MyPasswordInput';\r\nimport MyTextInput from '../components/inputs/MyTextInput';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport {Formik, Form} from 'formik';\r\nimport {CreateUserS} from '../yup-schemas/user-schema';\r\nimport {Grid, Container, Typography} from '@material-ui/core';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport { useSnackbar } from 'notistack';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CreateUserT } from '../types/user-type';\r\nimport { CareerT } from '../types/career-type';\r\nimport { SchoolT } from '../types/school-type';\r\n\r\nexport default function SignUp(){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [careers, setCareers] = useState<CareerT[]>();\r\n    const [schools, setSchools] = useState<SchoolT[]>();\r\n    const [school, setSchool] = useState<string>();\r\n    const classes = formStyles();\r\n    const history = useHistory();\r\n    \r\n    async function handleOnSubmit(user: CreateUserT){\r\n        const res = await FETCH({method:'POST', path:'signup', body:user})\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200) history.push('/signIn')\r\n    }\r\n\r\n    async function getCareers(){\r\n        const resCareers = await FETCH({method:'GET', path:`school/${school}/careers`})\r\n        setCareers(resCareers);\r\n    }\r\n\r\n    async function getSchools(){\r\n        const resSchools = await FETCH({method:'GET', path:'schools'})\r\n        setSchools(resSchools);\r\n        setSchool(resSchools[0]._id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(school){\r\n            getCareers()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[school])\r\n\r\n    useEffect(() => {\r\n        getSchools();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return(\r\n        <Container  component=\"main\" maxWidth=\"xs\" >\r\n            <Grid container className={classes.containerForm}>\r\n                <Typography variant=\"h5\" color=\"initial\">Sign Up</Typography>\r\n                <Grid item xs={12} >\r\n                    <Formik\r\n                        initialValues={ {   nickName: '', \r\n                                            idSchool: '',\r\n                                            idCareer: '',\r\n                                            email: '', \r\n                                            password: '', \r\n                                            confirmPassword: ''\r\n                                        } }\r\n                        validationSchema={CreateUserS}\r\n                        onSubmit = {(values)=>{\r\n                            handleOnSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={classes.form}  >\r\n                            <MySelect name=\"idSchool\" label=\"Escuela\" id=\"school\" onChange={setSchool}>\r\n                                {schools ? schools.map((s) => (\r\n                                    <option value={s._id} key={s._id} >{s.schoolName}</option>\r\n                                ))\r\n                                :null}\r\n                            </MySelect>\r\n                            <MySelect name=\"idCareer\" label=\"Carrera\" id=\"career\">\r\n                                {careers ? careers.map((c) => (\r\n                                    <option value={c._id} key={c._id} >{c.careerName}</option>\r\n                                ))\r\n                                :null}\r\n                            </MySelect>\r\n                            <MyTextInput name=\"nickName\" label=\"NickName\"/>\r\n                            <MyEmailInput name=\"email\" label=\"Correo Electronico\" />\r\n                            <MyPasswordInput name=\"password\" label=\"Contraseña\" />\r\n                            <MyPasswordInput name=\"confirmPassword\" label=\"Confirma Contraseña\" />\r\n                            <MySubmit value=\"Registrate\"/>\r\n                        </Form>\r\n                    </Formik>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n               \r\n}\r\n","import * as Yup from 'yup'\r\n\r\nexport const CreateQualificationOnlineS = Yup.object().shape({\r\n    idTeacher: Yup.string().required(),\r\n    idSubject: Yup.string().required(),\r\n    learn: Yup.boolean().required(),\r\n    isEasy: Yup.boolean().required(),\r\n    answer: Yup.boolean().required(),\r\n    sentDocuments: Yup.boolean().required(),\r\n    madeVideocalls: Yup.boolean().required(),\r\n    dissapear: Yup.boolean().required(),\r\n    beFair: Yup.boolean().required(),    \r\n    comment: Yup.string().matches(/^[a-z 0-9 .,;\\s]+$|^$/i, 'Comment can only contains letters, numbers and points')\r\n});","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { TextField} from '@material-ui/core';\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n}\r\n\r\nconst MyTextArea = ({name, label} : Props) => {\r\n    const [field, meta] = useField(name);\r\n    return(\r\n        <>\r\n            {meta.touched && meta.error \r\n                ? \r\n                <TextField fullWidth multiline label={label} error helperText={meta.error} {...field} rows=\"4\" variant=\"outlined\" size=\"small\" />    \r\n                : \r\n                <TextField fullWidth multiline label={label} {...field} rows=\"4\" variant=\"outlined\" size=\"small\"/>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyTextArea;","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport { ListItem, FormControlLabel, Checkbox, makeStyles, Theme} from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    listItem: {\r\n        padding: theme.spacing(0)\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    name:string, \r\n    label:string, \r\n}\r\n\r\nconst MyCheckBoxListItem = ({name, label} : Props) =>{\r\n    \r\n    const [field] = useField(name);\r\n    const key = \"check\"+name;\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <ListItem key={key} dense button className={classes.listItem}>\r\n            <FormControlLabel\r\n                control = {<Checkbox {...field} color=\"primary\"/>}\r\n                label={label}\r\n            />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default MyCheckBoxListItem;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport MySelect from './inputs/MySelect';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { SubjectT } from '../types/subject-type';\r\n\r\ntype props = {\r\n    idTeacher?: string\r\n}\r\n\r\nfunction SelectSubjects({idTeacher}: props){\r\n\r\n    async function getTeacherSubjects(idTeacher : string){\r\n        const res = await FETCH({method:'GET', path:`user/school/teacher/${idTeacher}/subjects`})\r\n        setSubjects(res);\r\n    }\r\n\r\n    async function getSubjects(){\r\n        const res = await FETCH({method:'GET', path:`user/school/subjects`})\r\n        setSubjects(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(idTeacher){\r\n            getTeacherSubjects(idTeacher);\r\n        }else{\r\n            getSubjects();\r\n        }\r\n    },[idTeacher])\r\n\r\n    const [subjects, setSubjects] = useState<SubjectT[]>()\r\n\r\n    return(\r\n        <MySelect id=\"subject\" name=\"idSubject\" label=\"Materia\">\r\n            {subjects? subjects.map((s) => (\r\n                    <option key={s._id} value={s._id}>{s.subjectName}</option>\r\n            )) : null}\r\n        </MySelect>\r\n    )\r\n}\r\n\r\nexport default SelectSubjects;","import React, {useEffect, useState} from 'react';\r\nimport MySelect from './inputs/MySelect';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { TeacherT } from '../types/teacher-type';\r\n\r\ntype props = {\r\n    setIDTeacher?: (arg0:string) => void\r\n}\r\n\r\nfunction SelectTeachers({setIDTeacher}: props){\r\n\r\n    const [teachers, setTeachers] = useState<TeacherT[]>()\r\n\r\n    async function getTeachers(){\r\n        const res = await FETCH({method:'GET', path:`user/school/teachers`});\r\n        setTeachers(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTeachers();\r\n    },[])\r\n\r\n    return(\r\n        <MySelect id=\"teacher\" name=\"idTeacher\" label=\"Maestro\" onChange={setIDTeacher}>\r\n            {teachers? teachers.map((t) => (\r\n                <option key={t._id} value={t._id}>{t.teacherName}</option>\r\n            )) : null}\r\n        </MySelect>\r\n    )\r\n}\r\n\r\nexport default SelectTeachers;","import React, {useState} from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport { Typography, List, Grid, Container, FormControl, Box } from '@material-ui/core';\r\nimport {CreateQualificationOnlineS} from '../yup-schemas/qualificationOnline-schema';\r\nimport MyTextArea from '../components/inputs/MyTextArea';\r\nimport MyCheckBoxListItem from '../components/inputs/MyCheckBoxListItem';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport { InferType } from 'yup';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport SelectSubjects from '../components/SelectSubject';\r\nimport SelectTeachers from '../components/SelectTeachers';\r\nimport linkStyle from '../material-ui/linkStyle';\r\nimport formStyles from '../material-ui/formStyles';\r\n\r\ntype createQualificationOnlineType = InferType<typeof CreateQualificationOnlineS>\r\n\r\nexport default function QualificationOnlineForm(){\r\n    \r\n    const [teacherID, setTeacherID] = useState<string>()\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const formClasses = formStyles();\r\n    const classes = linkStyle();\r\n    const history = useHistory();\r\n\r\n    async function handleOnSubmit(values: createQualificationOnlineType){\r\n        if(values){\r\n            const res = await FETCH({method:'POST', path:'qualificationOnline', body:values});\r\n            enqueueSnackbar(res.message);\r\n            history.push('/userComments') \r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Grid container className={formClasses.containerForm}>\r\n                <Typography variant=\"h5\" color=\"initial\">Calificación Online</Typography> \r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues = {{\r\n                            idTeacher: '',\r\n                            idSubject: '',\r\n                            learn: false,\r\n                            isEasy: false,\r\n                            answer: false,\r\n                            sentDocuments: false,\r\n                            madeVideocalls: false,\r\n                            dissapear: false,\r\n                            beFair: false,\r\n                            comment: '',\r\n                        }}\r\n                        validationSchema = {CreateQualificationOnlineS}\r\n                        onSubmit = {(values) => {\r\n                            handleOnSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={formClasses.form} >\r\n                           \r\n                            <SelectTeachers setIDTeacher={setTeacherID} />\r\n                            <SelectSubjects idTeacher={teacherID} />\r\n\r\n                            <FormControl fullWidth>\r\n                                <List>\r\n                                    <MyCheckBoxListItem name=\"learn\" label=\"¿Aprendiste?\"/>\r\n                                    <MyCheckBoxListItem name=\"isEasy\" label=\"¿Es barco?\"/>\r\n                                    <MyCheckBoxListItem name=\"answer\" label=\"¿Respondió preguntas?\"/>\r\n                                    <MyCheckBoxListItem name=\"sentDocuments\" label=\"¿Mandó documentos/videos?\"/>\r\n                                    <MyCheckBoxListItem name=\"madeVideocalls\" label=\"¿Hizo videollamadas?\"/>\r\n                                    <MyCheckBoxListItem name=\"dissapear\" label=\"¿Desapareció?\"/>\r\n                                    <MyCheckBoxListItem name=\"beFair\" label=\"¿Fue justó?\"/>\r\n                                </List>\r\n                            </FormControl>\r\n                            <MyTextArea label=\"Comentario (Opcional)\" name=\"comment\"/>\r\n                            <MySubmit value=\"Enviar\" />\r\n                        </Form>\r\n                    </Formik>\r\n                    <Box my={2} >\r\n                        <Link to=\"/addTeacher\" className={classes.link}>\r\n                            <Typography align=\"center\" style={{width: '100%'}} variant=\"body2\">¿No esta el maestro o no tiene la materia que buscas?</Typography>\r\n                        </Link>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n    \r\n}","import React from 'react';\r\nimport {TextField, makeStyles, Theme} from '@material-ui/core';\r\nimport {Autocomplete} from '@material-ui/lab';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n  search: {\r\n      margin: theme.spacing(0)\r\n  },\r\n}));\r\n\r\ntype OptionType = {\r\n  _id: string, \r\n  [optionNameField:string]:string\r\n}\r\n\r\ntype Props = {\r\n    options: OptionType[]\r\n    placeholder: string\r\n    onChange: any\r\n    optionNameField: string\r\n}\r\n\r\nconst MySearchBar = ({options, placeholder, onChange, optionNameField} : Props ) => {\r\n  const classes = useStyle();\r\n  return(\r\n      <Autocomplete\r\n        freeSolo\r\n        options={[...options]}\r\n        getOptionLabel={opcion => opcion[optionNameField]}\r\n        onChange={onChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            placeholder={placeholder}\r\n            className={classes.search}\r\n            margin=\"normal\"\r\n            id=\"My\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps}}\r\n          />\r\n        )}\r\n      />\r\n  )\r\n}\r\n\r\n\r\nexport default MySearchBar;","import React from 'react';\r\nimport {SvgIcon, SvgIconProps} from '@material-ui/core';\r\n\r\nfunction DonkeyIcon(props: SvgIconProps){\r\n    return(\r\n        <SvgIcon {...props} viewBox=\"0 0 512.001 512.001\">\r\n            <path d=\"M203.836,245.606c-11.341,0-20.569,9.324-20.569,20.836c0,11.511,9.229,20.843,20.569,20.843\r\n\t\t\t\tc11.355,0,20.583-9.332,20.583-20.843C224.419,254.93,215.191,245.606,203.836,245.606z\"/>\r\n\t\t\t<path d=\"M308.01,245.444c-11.45,0-20.739,9.401-20.739,20.999c0,11.598,9.288,20.999,20.739,20.999\r\n\t\t\t\tc11.437,0,20.725-9.401,20.725-20.999C328.735,254.845,319.446,245.444,308.01,245.444z\"/>\r\n\t\t\t<path d=\"M219.852,415.644c-9.79,0-17.756,8.049-17.756,17.986c0,9.936,7.966,17.992,17.756,17.992\r\n\t\t\t\tc9.802,0,17.768-8.055,17.768-17.992C237.62,423.693,229.654,415.644,219.852,415.644z\"/>\r\n\t\t\t<path d=\"M292.016,415.505c-9.885,0-17.903,8.115-17.903,18.126c0,10.011,8.018,18.126,17.903,18.126\r\n\t\t\t\tc9.872,0,17.89-8.115,17.89-18.126C309.906,423.619,301.889,415.505,292.016,415.505z\"/>\r\n\t\t\t<path d=\"M465.76,12.397L463.209,2.25l-10.35-1.536c-1.809-0.268-44.707-6.249-80.768,21.756\r\n\t\t\t\tc-21.368,16.593-35.542,41.123-42.299,73.077c-20.657-8.262-45.306-12.431-73.79-12.431s-53.134,4.17-73.792,12.432\r\n\t\t\t\tc-6.756-31.955-20.931-56.484-42.298-73.078C103.849-5.535,60.95,0.445,59.142,0.714L48.792,2.25l-2.551,10.147\r\n\t\t\t\tc-0.301,1.198-7.306,29.729-1.397,64.232c5.163,30.142,21.281,70.231,67.794,96.368c-6.233,22.006-7.794,47.74-4.617,77.034\r\n\t\t\t\tc4.196,38.688,13.335,61.724,23.917,88.396c4.113,10.367,8.366,21.088,12.684,33.642c2.495,7.254,2.872,28.025,2.343,40.452\r\n\t\t\t\tl-0.015,0.675c0,47.041,23.227,70.799,42.711,82.446c22.62,13.52,48.561,16.358,66.339,16.358\r\n\t\t\t\tc17.778,0,43.719-2.838,66.339-16.358c19.485-11.647,42.711-35.405,42.711-82.446l-0.015-0.675\r\n\t\t\t\tc-0.519-12.056-0.134-33.25,2.343-40.452c4.319-12.557,8.572-23.276,12.684-33.643c10.582-26.672,19.721-49.706,23.917-88.395\r\n\t\t\t\tc3.177-29.293,1.615-55.028-4.618-77.034c46.513-26.136,62.63-66.226,67.793-96.367C473.066,42.126,466.061,13.595,465.76,12.397\r\n\t\t\t\tz M124.864,143.866c-26.859-16.147-43.304-40.141-48.943-71.509c-2.934-16.322-2.24-31.235-1.13-40.925\r\n\t\t\t\tc11.555,0.473,30.148,3.44,46.174,16.019c17.114,13.432,27.946,35.054,32.298,64.296c-5.541,4.213-10.625,8.881-15.232,14.015\r\n\t\t\t\tC133.054,131.306,128.67,137.348,124.864,143.866z M306.257,468.734c-17.35,10.371-38.934,11.918-50.256,11.918\r\n\t\t\t\tc-11.322,0-32.907-1.547-50.256-11.918c-18.394-10.994-27.373-29.06-27.446-55.218c0.053-1.307,0.13-3.486,0.181-6.249\r\n\t\t\t\tc17.618-16.308,46.674-26.264,77.521-26.264s59.902,9.955,77.521,26.264c0.051,2.763,0.128,4.941,0.181,6.249\r\n\t\t\t\tC333.63,439.674,324.65,457.739,306.257,468.734z M372.816,246.65c-3.738,34.46-11.748,54.652-21.89,80.215\r\n\t\t\t\tc-4.245,10.7-8.635,21.765-13.19,35.01c-0.831,2.416-1.505,5.209-2.052,8.221c-22.061-13.067-50.053-20.442-79.684-20.442\r\n\t\t\t\tc-29.631,0-57.622,7.375-79.684,20.442c-0.548-3.013-1.221-5.807-2.052-8.221c-4.555-13.245-8.946-24.31-13.19-35.009\r\n\t\t\t\tc-10.142-25.563-18.153-45.754-21.89-80.216c-4.832-44.543,2.631-78.173,22.177-99.953\r\n\t\t\t\tc19.194-21.389,51.035-32.234,94.639-32.234s75.445,10.845,94.639,32.234C370.186,168.477,377.648,202.106,372.816,246.65z\r\n\t\t\t\t M436.259,71.337c-5.459,31.868-21.962,56.206-49.122,72.529c-3.806-6.518-8.19-12.56-13.167-18.106\r\n\t\t\t\tc-4.607-5.134-9.691-9.801-15.233-14.016c4.351-29.241,15.184-50.863,32.298-64.295c16.035-12.586,34.634-15.548,46.168-16.022\r\n\t\t\t\tC438.29,40.931,438.98,55.447,436.259,71.337z\"/>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default DonkeyIcon;","import React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport DonkeyIcon from '../../DonkeyIcon';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\ntype Props = {\r\n    name: string,\r\n    rank: number | undefined\r\n    idComment: string\r\n}\r\n\r\nexport default function RatingComment({name, rank, idComment} : Props){\r\n\r\nconst [rankValue, setRankValue] = React.useState<number | undefined>(rank);\r\n\r\nasync function handleRank(rank: number | null){\r\n    if(rank){\r\n        await FETCH({method:'POST', path:`rankComment/${idComment}`, body:{rank}})\r\n        setRankValue(rank);\r\n    }\r\n}\r\n\r\nreturn(\r\n    <>\r\n        {rankValue || rankValue===0 ?\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <Rating name={name} icon={<DonkeyIcon/>} value={rankValue} disabled/>\r\n                <Box ml={1}><Typography variant=\"body2\">{rankValue}</Typography></Box>\r\n            </Box>\r\n        :\r\n            <Rating name={name} icon={<DonkeyIcon/>} value={rankValue} onChange={(e, rank) => {handleRank(rank)}}/>\r\n        }\r\n    </>\r\n)\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar, SnackbarKey } from 'notistack';\r\nimport { IconButton, Button } from '@material-ui/core';\r\n\r\ntype props = {\r\n    idComment: string,\r\n    getUserComments: () => void,\r\n} \r\n\r\nfunction DeleteCommentButton({idComment, getUserComments}: props){\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const confirmActions = (key: SnackbarKey) => (\r\n        <>\r\n            <Button autoFocus onClick={() => {handleDelete(key)}}>\r\n                Eliminar\r\n            </Button>\r\n            <Button onClick={() => { closeSnackbar(key) }}>\r\n                Cancelar\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    async function handleDelete(key:SnackbarKey){\r\n        closeSnackbar(key);\r\n        const res = await FETCH({method:'DELETE', path:`user/comment/${idComment}`})\r\n        enqueueSnackbar(res.message);\r\n        if(getUserComments){\r\n            getUserComments()\r\n        }\r\n    }\r\n\r\n    function showAlertConfirm(){\r\n        enqueueSnackbar(\"Seguro? \", {\r\n            variant: 'warning',\r\n            action: confirmActions\r\n        });\r\n    }\r\n    \r\n    return(\r\n        <IconButton aria-label=\"deleteComment\" onClick={showAlertConfirm}>\r\n            <DeleteRoundedIcon  color=\"primary\" />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default DeleteCommentButton;","import React from 'react'\r\nimport {Box, Typography} from '@material-ui/core';\r\n\r\nfunction ToolTipInfo({user, createdAt}: {user: string, createdAt: string}){\r\n    return(\r\n        <Box>\r\n            <Typography align=\"right\" variant=\"body2\">{user}</Typography>\r\n            <Typography align=\"right\" variant=\"body2\">{createdAt} </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ToolTipInfo;","import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\ntype props = {\r\n    comment: string\r\n}\r\n\r\nfunction CommentText({comment}: props){\r\n\r\n    //CommentText guarda lo que es visible del comentario\r\n    const [commentText, setCommentText] = React.useState(comment.substr(0, 300));\r\n\r\n    function readMore(){\r\n        setCommentText(comment);\r\n    }\r\n\r\n    return(\r\n        <Typography align=\"justify\" variant=\"body2\" gutterBottom> \r\n            {commentText}\r\n            {comment.length>300 && commentText.length<=300 ? <Button color=\"inherit\" size=\"small\" onClick={readMore}>Seguir Leyendo </Button> : null}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default CommentText;","import React from 'react';\r\nimport { Card, CardContent, CardHeader, IconButton, Tooltip, CardActions, makeStyles, Theme} from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';import RatingComment from './RatingComment';\r\nimport {CommentCardT} from '../../types/comment-type';\r\nimport DeleteCommentButton from './DeleteCommentButton';\r\nimport ToolTipInfo from './ToolTipInfo';\r\nimport CommentText from './CommentText';\r\n\r\ninterface Props {\r\n    background: string\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    card:{\r\n        borderRadius: theme.spacing(2,0,0,0),\r\n        padding: theme.spacing(0)\r\n    },\r\n    actionsCardHeader:{\r\n        margin: theme.spacing(0)\r\n    },\r\n    commentCardHeader:{\r\n        color: theme.palette.common.white,\r\n        background: (props: Props) => props.background,\r\n        paddingTop: theme.spacing(0),\r\n        paddingBottom: theme.spacing(0)\r\n    },\r\n    iconWhite:{\r\n        color: theme.palette.common.white\r\n    },\r\n    cardActions:{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    },\r\n}));\r\n\r\ninterface commentType extends CommentCardT {\r\n    getUserComments?: () => void,\r\n    color: string,\r\n}\r\n\r\nexport default function CommentCard(prop: commentType){\r\n    const {color, comment, subject, user, createdAt, currentUser, _id, rank, getUserComments} = prop;\r\n\r\n    const classes = useStyle({\r\n        background: color\r\n    });\r\n    \r\n    return(\r\n        \r\n            <Card raised className={classes.card}>\r\n                <CardHeader className={classes.commentCardHeader}\r\n                    classes={{action: classes.actionsCardHeader}}\r\n                    title={subject.subjectName}\r\n                    titleTypographyProps = {{\"variant\":\"overline\"}}\r\n                    action={\r\n                        <IconButton aria-label=\"info\">\r\n                            <Tooltip enterTouchDelay={0} placement=\"bottom-end\" title={<ToolTipInfo user={user.nickName} createdAt={createdAt} />}>\r\n                                <InfoOutlinedIcon className={classes.iconWhite}/>\r\n                            </Tooltip>\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <CommentText comment={comment} />\r\n                </CardContent>\r\n                <CardActions className={classes.cardActions}>\r\n                    {currentUser === user._id && getUserComments ? \r\n                        <DeleteCommentButton idComment={_id} getUserComments={getUserComments} />\r\n                        : null\r\n                    }\r\n                    <RatingComment name={_id} rank={rank} idComment={_id}/>\r\n                </CardActions>\r\n            </Card>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport CommentCard from './../commentCard/CommentCard';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport { CommentCardT } from '../../types/comment-type';\r\n\r\ntype props = {\r\n    teacherID?: string,\r\n    userComments: boolean,\r\n    setTotalComments?: (arg0: number) => void\r\n}\r\n\r\nconst TeacherCommentsList = ({teacherID, userComments, setTotalComments}: props) => {\r\n    const [comments, setComments] = React.useState<CommentCardT[]>();\r\n    const colors = [\r\n        \"hsl(283,60%,40%)\",\r\n        \"hsl(321.5,60%,40%)\",\r\n        \"hsl(360,60%,40%)\"\r\n    ]\r\n    function getColorRandom(){\r\n        const colorRandom = Math.round(Math.random() * ((colors.length-1)-0));\r\n        return colors[colorRandom];\r\n    }\r\n    \r\n    async function getComments(){\r\n        if(teacherID) getTeacherComments();\r\n        else if(userComments) getUserComments();\r\n    }\r\n\r\n    async function getTeacherComments(){\r\n        const res = await FETCH({method:'GET', path:`teacher/${teacherID}/comments`});\r\n        setComments(res);\r\n    }\r\n\r\n    async function getUserComments(){\r\n        const res = await FETCH({method:'GET', path:`user/commentsCard`});\r\n        setComments(res);\r\n        if(setTotalComments) setTotalComments(res.length);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[teacherID])\r\n\r\n    return(\r\n        <Grid container spacing={2} >\r\n            {comments && comments.length!==0 ? \r\n                comments.map((c) => (\r\n                    <Grid item xs={12} key={c._id}>\r\n                        {userComments ? \r\n                            <CommentCard {...c} color={getColorRandom()} getUserComments={getUserComments}/> \r\n                        : \r\n                            <CommentCard {...c} color={getColorRandom()} /> \r\n                        }\r\n                    </Grid>\r\n                ))\r\n            : \r\n            <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"h5\" >Sin Comentarios</Typography>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TeacherCommentsList;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button} from '@material-ui/core'\r\nimport linkStyle from '../../material-ui/linkStyle';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\ntype props = {\r\n    teacherID: string\r\n}\r\n\r\nfunction TeacherProfileLink({teacherID}: props){\r\n    \r\n    const linkValue = `/teacherProfile/${teacherID}`;\r\n    const classes = linkStyle();\r\n\r\n    return(\r\n        <Link to={linkValue} className={classes.link}>\r\n            <Button\r\n              variant=\"text\"\r\n              color=\"secondary\"\r\n              startIcon={<ChevronRightIcon/>}\r\n              size=\"large\"\r\n            >\r\n              VISITAR PERFIL\r\n            </Button>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default TeacherProfileLink;","import React, {useEffect} from 'react';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport MySearchBar from '../components/inputs/MySearchBar';\r\nimport TeacherCommentsList from '../components/teacher/TeacherCommentsList';\r\nimport TeacherProfileLink from '../components/teacher/TeacherProfileLink';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { TeacherOptionT } from '../types/teacher-type';\r\n\r\nexport default function TeacherSearcher (){\r\n\r\n    const [teacherID, setTeacherID] = React.useState<string>();\r\n    const [teachers, setTeachers] = React.useState<TeacherOptionT[]>();\r\n    \r\n\r\n    async function getTeachers(){\r\n        const res = await FETCH({method:'GET', path:'user/school/teachers'})\r\n        setTeachers(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //GET TEACHERS\r\n        getTeachers();\r\n    }, [])\r\n\r\n    function catchTeacher(e: any, v: TeacherOptionT){\r\n        if(v){\r\n            setTeacherID(v._id);\r\n        }else{\r\n            setTeacherID(undefined);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} >\r\n                    {teachers ? <MySearchBar options={teachers} placeholder='Maestros' onChange={catchTeacher} optionNameField='teacherName' /> : null}\r\n                </Grid>\r\n                {teacherID ? \r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TeacherProfileLink teacherID={teacherID}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TeacherCommentsList userComments={false} teacherID={teacherID}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n    \r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\ntype props = {\r\n    totalComments: number | undefined\r\n}\r\n\r\nfunction TotalQualificationsText({totalComments}: props){\r\n\r\n    const [total, setTotal] = useState<number>(0);\r\n\r\n    async function getTotal(){\r\n        const res = await FETCH({method:'GET', path:'user/totalQualifications'})\r\n        console.log(res.total);\r\n        console.log(!totalComments);\r\n        setTotal(res.total);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getTotal();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[totalComments])\r\n\r\n    return(\r\n        <>\r\n        {!totalComments && total===0 ?\r\n            <Typography align=\"right\" style={{width: '100%'}} variant=\"subtitle2\">Comienza a comentar...!</Typography>\r\n        :   <Typography align=\"right\" style={{width: '100%'}} variant=\"subtitle2\">Haz contribuido con {total} calificacion(es)</Typography>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TotalQualificationsText;","import React, { useState } from 'react';\r\nimport { Fab, makeStyles, Theme, createStyles, Container, Divider } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport TeacherCommentsList from '../components/teacher/TeacherCommentsList';\r\nimport TotalQualificationsText from '../components/user/TotalQualificationsText';\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n  createStyles({\r\n    fab:{\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    },\r\n    divider:{\r\n        margin: theme.spacing(2, 0, 3, 0)\r\n    }\r\n  })\r\n)\r\n\r\nexport default function UserComments(){\r\n    \r\n    const classes = useStyles();\r\n    const [totalComments, setTotalComments] = useState<number>();\r\n    \r\n    return(\r\n        <>\r\n            <Container>\r\n\r\n                <TotalQualificationsText totalComments={totalComments}/>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <TeacherCommentsList userComments={true} setTotalComments={setTotalComments} />\r\n                <Link to=\"qualificationOnlineForm\">\r\n                    <Fab color=\"primary\" aria-label=\"add qualification button\" className={classes.fab}>\r\n                        <Add />\r\n                    </Fab>\r\n                </Link>\r\n                \r\n            </Container>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\n//Return and array of hsl colores between hsl(283,60,70) and hsl(360, 60, 70)\r\n//Obviously the common light is 70 but you can change\r\nfunction generateColors(totalColors : number, light : number = 70): string[]{\r\n  const increase = (360-283) / (totalColors-1);\r\n  let backgroundColors = [];\r\n  let hueStart=283;\r\n  for(let i=0; i<totalColors; i++){\r\n    let hue = (increase*i)+hueStart;\r\n    \r\n    backgroundColors.push(`hsl(${hue},60%,${light}%)`)\r\n  }\r\n  return backgroundColors;\r\n}\r\n\r\nfunction generateColorsGradients(canvas: HTMLCanvasElement): CanvasGradient[] | []{\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const increase = (360-283) / (6);\r\n  let backgroundColors = [];\r\n  let hueStart=283;\r\n  for(let i=0; i<7; i++){\r\n    let hue = (increase*i)+hueStart;\r\n    let color1 = `hsl(${hue},60%,85%)`;\r\n    let color2 = `hsl(${hue},60%,45%)`;\r\n    \r\n    if(ctx){\r\n      const gradient = ctx.createLinearGradient(0,0,500,0);\r\n      gradient.addColorStop(0, color1);\r\n      gradient.addColorStop(1, color2);\r\n      backgroundColors.push(gradient);\r\n    }\r\n  }\r\n  return backgroundColors;\r\n}\r\n\r\ntype props = {\r\n  idTeacher : string\r\n}\r\n\r\nfunction ChartTeacherQualifications({idTeacher}: props) {\r\n\r\n  const borderColors = generateColors(7, 40);\r\n  const dataLabels: string[] = ['Es Barco', 'Responde Preguntas', 'Manda Docs/Videos', 'Hace Videollamadas', 'Desaparece', 'Es Justo', '% Que Aprendieron'];\r\n  const [dataValues, setDataValues] = useState<number[]>();\r\n\r\n  async function getChartData(){\r\n    const res = await FETCH({method: 'GET', path:`teacherChart/${idTeacher}`})\r\n    setDataValues([\r\n      res.isEasy,\r\n      res.answer,\r\n      res.sentDocuments,\r\n      res.madeVideocalls,\r\n      res.dissapear,\r\n      res.beFair,\r\n      res.learn\r\n    ])\r\n  }\r\n\r\n  useEffect(()=> {\r\n    getChartData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  const data = (canvas: HTMLCanvasElement) => {\r\n    return{\r\n      labels: dataLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Experiencia de los estudiantes en %',\r\n          backgroundColor: generateColorsGradients(canvas),\r\n          borderColor: borderColors,\r\n          hoverBorderColor: borderColors,\r\n          borderWidth: 0.5,\r\n          data: dataValues,\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const options = {\r\n  \r\n    responsive: true, \r\n    scales: {\r\n      xAxes: [{\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 100\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    title:{\r\n      display: true,\r\n      text: 'EXPERIENCIA DE LOS ESTUDIANTES EN  %'\r\n    }\r\n  }\r\n\r\n  return (\r\n      <HorizontalBar data={data} options={options}/>\r\n  );\r\n}\r\n\r\nexport default ChartTeacherQualifications;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Badge, makeStyles, Theme} from '@material-ui/core';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport DonkeyIcon from '../../DonkeyIcon';\r\n\r\nconst useStyles = makeStyles((theme : Theme) => ({\r\n    yellowBadge: {\r\n        backgroundColor: \"hsl(60, 60%, 50%)\",\r\n    },\r\n    redBadge: {\r\n        backgroundColor: \"hsl(0, 60%, 50%)\",\r\n    },\r\n    greenBadge: {\r\n        backgroundColor: \"hsl(150, 60%, 50%)\",\r\n    }\r\n}))\r\n\r\ntype props = {\r\n    idTeacher: string\r\n}\r\n\r\nfunction TeacherAvatarScored({idTeacher}: props) {\r\n\r\n    const classes = useStyles();\r\n    const [score, setScore] = useState<number>(0);\r\n\r\n    async function getTeacherScore(){\r\n        const res = await FETCH({method:'GET', path:`teacherScore/${idTeacher}`})\r\n        setScore(res.score);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getTeacherScore();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return(\r\n        <Badge classes={{badge: classes.greenBadge}} overlap='circle' badgeContent={score} showZero color='primary' >\r\n            <DonkeyIcon style={{ fontSize: 80 }} />\r\n        </Badge>\r\n    )\r\n}\r\n\r\nexport default TeacherAvatarScored;","import { Typography, Accordion, AccordionSummary, AccordionDetails, makeStyles, Theme, createStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\ntype props = {\r\n    teacherName: string,\r\n    gossip: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n  createStyles({\r\n    accordion:{\r\n        background: theme.palette.grey[200],\r\n    }\r\n  })\r\n)\r\n\r\nfunction GossipAccordion({teacherName, gossip}:props){\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Accordion className={classes.accordion} >\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n            >\r\n                <Typography variant=\"button\" color=\"initial\">{teacherName}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Typography variant=\"body2\" color=\"initial\">{gossip}</Typography>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default GossipAccordion;","import React, {useState, useEffect} from 'react';\r\nimport GossipAccordion from './GossipAccordion';\r\nimport {Grid, Typography, Box} from '@material-ui/core'\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { GossipT } from '../types/gossip-type';\r\n\r\ntype props = {\r\n    idTeacher?: string\r\n}\r\n\r\nfunction ListGossips({idTeacher}:props){\r\n\r\n    const [gossips, setGossips] = useState<GossipT[]>();\r\n\r\n    async function getGossips(){\r\n        let res;\r\n        if(idTeacher) res = await FETCH({method:'GET', path:`teacher/${idTeacher}/gossips`})\r\n        else res = await FETCH({method:'GET', path:'gossips'})\r\n        setGossips(res);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getGossips();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            {gossips? gossips.map((g, i)=>(\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12}>\r\n                            <GossipAccordion gossip={g.gossip} teacherName={g.teacherName ? g.teacherName : `Gossip ${i+1}`} />\r\n                    </Grid>\r\n                </Grid>\r\n            )) : \r\n                <Box mt={3}>\r\n                    <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"h5\" >Aún no hay tendedero</Typography>\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListGossips;","import React, { useEffect, useState } from 'react';\r\nimport {Box, Grid, Typography, Container} from '@material-ui/core'\r\nimport MyChart from '../components/teacher/TeacherChart';\r\nimport { useParams } from 'react-router-dom';\r\nimport TeacherCommentsList from '../components/teacher/TeacherCommentsList';\r\nimport TeacherAvatarScored from '../components/teacher/TeacherAvatarScored';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport ListGossips from '../components/ListGossips';\r\n\r\nexport default function TeacherProfile(){\r\n\r\n    const {idTeacher} = useParams<{idTeacher: string}>();\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2} >\r\n                <Grid item xs={12}>\r\n                    <Box display='flex' alignItems=\"center\" justifyContent='center'>\r\n                        <TeacherAvatarScored idTeacher={idTeacher} /> \r\n                        <TeacherNameText idTeacher={idTeacher} />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <MyChart idTeacher={idTeacher}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ListGossips idTeacher={idTeacher}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <TeacherCommentsList userComments={false} teacherID={idTeacher} />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\ntype props = {\r\n    idTeacher: string\r\n}\r\n\r\nfunction TeacherNameText({idTeacher}: props){\r\n\r\n    const [teacherName, setTeacherName] = useState<string>('');\r\n\r\n    async function getTeacherName(){\r\n        const res = await FETCH({method:'GET', path:`teacher/${idTeacher}`});\r\n        setTeacherName(res.teacherName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTeacherName();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return(\r\n        <Typography align=\"center\" variant=\"h4\">{teacherName}</Typography>\r\n    )\r\n}","import React, {ReactNode} from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\ntype props = {\r\n    children : ReactNode,\r\n    path : string,\r\n    exact : boolean\r\n}\r\n\r\nconst PublicRoute = ({children, path, exact} : props) => {\r\n    return(\r\n        <>\r\n            <Route exact={exact} path={path}>\r\n                {children}\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import React, { ReactNode } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\ntype props = {\r\n    children : ReactNode,\r\n    path : string,\r\n    exact : boolean\r\n}\r\n\r\nconst ProtectedRoute = ({children, path, exact} : props) => {\r\n    return(\r\n        <>\r\n        {   sessionStorage.getItem('token') ? \r\n                <Route exact={exact} path={path}>\r\n                    {children}\r\n                </Route>\r\n            :\r\n                <Redirect to=\"/\" />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import * as yup from 'yup';\r\n\r\nexport const AddTeacherS = yup.object().shape({\r\n    idSubject: yup.string().required(),\r\n    idTeacher: yup.string().test(\r\n        'required',\r\n        'Elige un maestro',\r\n        function(idTeacher){\r\n            const {teacherName} = this.parent;\r\n            if(!idTeacher && !teacherName){\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    ),\r\n    teacherName: yup.string().test(\r\n        'required',\r\n        'Escribe el nombre',\r\n        function(teacherName){\r\n            const {idTeacher} = this.parent;\r\n            if(!teacherName && !idTeacher){\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    )\r\n})\r\n\r\nexport const CreateTeacherS = yup.object().shape({\r\n    teacherName: yup.string().required()\r\n})","import React, {useState} from 'react';\r\nimport { Container, Grid, Typography, IconButton } from '@material-ui/core';\r\nimport { Formik, Form } from 'formik';\r\nimport SelectSubjects from '../components/SelectSubject';\r\nimport MyTextInput from '../components/inputs/MyTextInput';\r\nimport SelectTeachers from '../components/SelectTeachers';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {AddTeacherS} from '../yup-schemas/teacher-schema';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AddTeacherT } from '../types/teacher-type';\r\n\r\nfunction AddTeacher(){\r\n\r\n    const classes = formStyles();\r\n    const [isNewTeacher, setIsNewTeacher] = useState<boolean>(false); \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(values: AddTeacherT){\r\n        let res;\r\n        if(isNewTeacher){\r\n            res = await FETCH({method:'POST', path:`user/school/subject/${values.idSubject}/teacher`, body:{teacherName: values.teacherName}})\r\n        }else{\r\n            res = await FETCH({method:'POST', path:`user/school/subject/${values.idSubject}/teacher/${values.idTeacher}`})\r\n        }\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200){\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Grid container className={classes.containerForm} >\r\n                <Typography variant=\"h5\" color=\"initial\">Agregar Maestro</Typography> \r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues={{\r\n                            idSubject: '',\r\n                            idTeacher: '',\r\n                            teacherName: '',\r\n                        }}\r\n                        \r\n                        validationSchema={AddTeacherS}\r\n                        onSubmit={(values)=>{\r\n                            handleSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={classes.form}>\r\n                            <AddTeacherField setIsNewTeacher={setIsNewTeacher} isNewTeacher={isNewTeacher} />\r\n                            <SelectSubjects/>\r\n                            <MySubmit value=\"Enviar\" />\r\n                        </Form>\r\n                    </Formik>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddTeacher\r\n\r\n\r\ntype props = {\r\n    isNewTeacher: boolean,\r\n    setIsNewTeacher: (arg0: boolean) => void\r\n}\r\n\r\nfunction AddTeacherField({isNewTeacher, setIsNewTeacher}: props){\r\n    return(\r\n        <>\r\n        {isNewTeacher?\r\n            <Grid container>\r\n                <Grid item xs={10}>\r\n                    <MyTextInput label=\"Nombre Profesor\" name=\"teacherName\" />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <IconButton aria-label=\"addTeacher\" onClick={()=>setIsNewTeacher(false)}>\r\n                    <RefreshIcon/>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        :\r\n            <Grid container>\r\n                <Grid item xs={10}>\r\n                    <SelectTeachers/>                                \r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <IconButton aria-label=\"addTeacher\" onClick={()=>setIsNewTeacher(true)}>\r\n                        <AddIcon/>\r\n                    </IconButton>\r\n                </Grid>  \r\n            </Grid>                            \r\n        }\r\n        </>\r\n    )\r\n}","import * as yup from 'yup';\r\n\r\nexport const ResetPasswordS = yup.object().shape({\r\n    password: yup.string().required().max(50).min(8),\r\n    newPassword: yup.string().required().max(50).min(8),\r\n    confirmPassword: yup.string().required().max(50).min(8).oneOf([yup.ref('newPassword')], 'Passwords must match'),\r\n})\r\n\r\nexport const ResetPWDEmailS = yup.object().shape({\r\n    email: yup.string().email().required().max(320),\r\n})\r\n","import React from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport MyPasswordInput from '../components/inputs/MyPasswordInput'\r\nimport MySubmit from '../components/inputs/MySubmit'\r\nimport { Formik, Form } from 'formik';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport {ResetPasswordS} from '../yup-schemas/resetPassword-schema';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { ResetPasswordT } from '../types/resetPassword-type';\r\n\r\ntype props = {\r\n    setIsAuthenticated: (arg0: boolean) => void;\r\n}\r\n\r\nfunction ResetPassword({setIsAuthenticated}: props){\r\n    const {idUser} = useParams<{idUser: string}>();\r\n    const classes = formStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(values:ResetPasswordT){\r\n        const res = await FETCH({method:'PUT', path:`user/${idUser}/resetPassword`, body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200){\r\n            sessionStorage.removeItem('token');\r\n            history.push('/signIn');\r\n            setIsAuthenticated(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <Grid container className={classes.containerForm}>\r\n                <Typography variant=\"h5\" color=\"initial\">Recuperar Contraseña</Typography>\r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues = {{password: '', newPassword: '', confirmPassword:''}}\r\n                        validationSchema={ResetPasswordS}\r\n                        onSubmit = {(values)=>{\r\n                           handleSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={classes.form} >\r\n                            <MyPasswordInput name=\"password\" label=\"Contraseña\" />\r\n                            <MyPasswordInput name=\"newPassword\" label=\"Nueva Contraseña\" />\r\n                            <MyPasswordInput name=\"confirmPassword\" label=\"Confirma Contraseña\" />\r\n                            <MySubmit value=\"Enviar\" />\r\n                        </Form>\r\n                    </Formik>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default ResetPassword;","import React from 'react';\r\nimport { Typography, makeStyles, Theme, Box } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    text404: {\r\n         background: `linear-gradient(90deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.dark} 100%)`,\r\n         WebkitBackgroundClip: 'text',\r\n         WebkitTextFillColor: 'transparent',\r\n         fontWeight: 'bold',\r\n         fontSize: 200,\r\n         marginTop: theme.spacing(10)\r\n    },\r\n}));\r\n\r\nfunction NotFound(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n            <Typography display=\"inline\" className={classes.text404} variant=\"h1\" color=\"initial\">404</Typography>\r\n            <Typography display=\"inline\" variant=\"overline\" color=\"initial\">Pagina no Encontrada</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;","import React, { useState } from 'react';\r\nimport { Container, Grid, Typography, Backdrop, CircularProgress } from '@material-ui/core';\r\nimport {Formik, Form} from 'formik';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport MyEmailInput from '../components/inputs/MyEmailInput';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport {ResetPWDEmailS} from '../yup-schemas/resetPassword-schema';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype ResetPWDEmailType = {\r\n    email: string\r\n}\r\n\r\nfunction EmailResetPassword(){\r\n\r\n    const formClasses = formStyles();\r\n    const [openBackdrop, setOpenBackdrop] = useState<boolean>(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleSubmit(values: ResetPWDEmailType){\r\n        setOpenBackdrop(true);\r\n        const res = await FETCH({method:'POST', path:`user/resetPassword/email`, body:values});\r\n        setOpenBackdrop(false);\r\n        enqueueSnackbar(res.message);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Backdrop style={{zIndex: 1}} open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Container maxWidth=\"xs\">\r\n                <Grid container className={formClasses.containerForm}>\r\n                    <Typography variant=\"h5\" color=\"initial\">Recuperar Contraseña</Typography>\r\n                    <Grid item xs={12}>\r\n                        <Formik\r\n                            initialValues = {{email: ''}}\r\n                            validationSchema={ResetPWDEmailS}\r\n                            onSubmit = {(values)=>{\r\n                                handleSubmit(values);\r\n                            }}\r\n                        >\r\n                            <Form className={formClasses.form} >\r\n                                <MyEmailInput label=\"Correo electronico\" name=\"email\" />\r\n                                <MySubmit value=\"Enviar\" />\r\n                            </Form>\r\n                        </Formik>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailResetPassword;","import React, {useState, useEffect} from 'react';\r\nimport {Typography, Box, Grid, Container, Button} from '@material-ui/core';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport {useHistory} from 'react-router-dom';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { UserT } from '../types/user-type';\r\n\r\nfunction UserSettings(){\r\n\r\n    const [user, setUser] = useState<UserT>();\r\n    const history = useHistory();\r\n\r\n    async function getUser(){\r\n        const res = await FETCH({method:'GET', path:'user'});\r\n        setUser(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12} alignItems=\"center\">\r\n                        {user ? \r\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                                <Typography align=\"center\" variant=\"overline\" style={{fontSize:50}}>{user.nickName}</Typography>\r\n                                <Typography align=\"center\" variant=\"overline\" style={{fontSize:20, margin:'0'}} color=\"textSecondary\">{user.schoolName}</Typography>\r\n                                <Typography align=\"center\" variant=\"overline\" style={{fontSize:20, margin:'0'}} color=\"textSecondary\">{user.careerName}</Typography>\r\n                                <Typography align=\"center\" variant=\"overline\" style={{fontSize:20, margin:'0'}} color=\"textSecondary\">{user.email}</Typography>\r\n                            </Box>\r\n                        : null}\r\n\r\n                </Grid>\r\n                <Grid item xs={12} alignItems=\"center\">\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Button onClick={() => {history.push('/deleteAccount')}} variant=\"contained\" color=\"primary\" endIcon={<HighlightOffIcon/>}>\r\n                            ELIMINAR CUENTA\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserSettings","import React from 'react';\r\nimport { Container, Grid, Typography, Button, Box } from '@material-ui/core';\r\nimport {Formik, Form} from 'formik';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport {DeleteAccountS} from '../yup-schemas/user-schema';\r\nimport { useSnackbar, SnackbarKey } from 'notistack';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport {useHistory} from 'react-router-dom'\r\nimport MyPasswordInput from '../components/inputs/MyPasswordInput';\r\n\r\ntype DeleteAccountType = {\r\n    password: string\r\n}\r\n\r\ntype props = {\r\n    setIsAuthenticated: (arg0: boolean) => void;\r\n}\r\n\r\nfunction DeleteAccount({setIsAuthenticated}: props){\r\n    const formClasses = formStyles();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n\r\n    async function deleteUser(key: SnackbarKey, values: DeleteAccountType){\r\n        closeSnackbar(key);\r\n        const res = await FETCH({method:'DELETE', path:'user/deleteAccount', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200){\r\n            sessionStorage.removeItem('token');\r\n            history.push('/signIn');\r\n            setIsAuthenticated(false);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(values: DeleteAccountType){\r\n        enqueueSnackbar(\"Seguro? \", {\r\n            variant: 'error',\r\n            action: (key: SnackbarKey) => (\r\n                <>\r\n                    <Button onClick={() => { deleteUser(key, values) }}>\r\n                        Eliminar\r\n                    </Button>\r\n                    <Button onClick={() => { closeSnackbar(key) }}>\r\n                        Cancelar\r\n                    </Button>\r\n                </>\r\n            )\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <Grid container className={formClasses.containerForm}>\r\n                <Typography variant=\"h5\" color=\"initial\">Eliminar Cuenta</Typography>\r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues = {{password: ''}}\r\n                        validationSchema={DeleteAccountS}\r\n                        onSubmit = {(values)=>{\r\n                           handleSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={formClasses.form} >\r\n                            <MyPasswordInput name=\"password\" label=\"Contraseña\" />\r\n                            <MySubmit value=\"Eliminar Cuenta\" />\r\n                        </Form>\r\n                    </Formik>\r\n                    <Box my={2} >\r\n                        <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"body2\">Recuerda que al eliminar tu cuenta, borras también TODOS los datos relacionados a ella</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount;","import React from 'react';\r\nimport {Typography, makeStyles, Theme, Box } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    textGradient: {\r\n        background: `linear-gradient(90deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.dark} 100%)`,\r\n        WebkitBackgroundClip: 'text',\r\n        WebkitTextFillColor: 'transparent',\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n        marginTop: theme.spacing(10),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    txtDecalogo:{\r\n        textAlign:'center',\r\n        fontFamily: 'Encode Sans Condensed'\r\n    }\r\n}));\r\n\r\nfunction Decalogue(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <>\r\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:20}} color=\"initial\">PORQUE ASPIRO A SER TODO UN HOMBRE</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:16, fontWeight:\"bold\"}} color=\"initial\">PORQUE EXIJO MIS DEBERES ANTES QUE MIS DERECHOS</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:18}} color=\"initial\">POR CONVICCIÓN Y NO POR CIRCUNSTANCIA</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:15}} color=\"initial\">PARA ALCANZAR LAS CONQUISTAS UNIVERSALES Y OFRECERLAS A MI PUEBLO</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:16, fontWeight:\"bold\"}} color=\"initial\">POR QUE ME DUELE LA PATRIA EN MIS ENTRAÑAS Y ASPIRO A CALMAR SUS DOLENCIAS</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:15}} color=\"initial\">PORQUE ARDO EN DESEOS DE DESPERTAR AL HERMANO DORMIDO</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:20}} color=\"initial\">PARA PRENDER UNA ANTORCHA EN EL ALTAR DE LA PATRIA</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:16, fontWeight:\"bold\"}}  color=\"initial\">PORQUE ME DIGNIFICO Y SIENTO EL DEBER DE DIGNIFICAR A MI INSTITUCION</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:19}} color=\"initial\">PORQUE MI RESPETADA LIBERTAD DE JOVEN Y ESTUDIANTE ME IMPONE LA RAZÓN DE RESPECTAR ESTE RECINTO</Typography>\r\n                <Typography className={classes.txtDecalogo} style={{fontSize:17, fontWeight:\"bold\"}} color=\"initial\">POR QUE TRADUZCO LA TRICOTOMÍA DE MI BANDERA COMO TRABAJO, DEBER Y HONOR</Typography>\r\n            </Box>\r\n             \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Decalogue;","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\ntype props = {\r\n    title: string,\r\n    subtitle: string\r\n}\r\n\r\nfunction Baneer({title, subtitle}:props){\r\n\r\n    return(\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"h4\" color=\"initial\">{title}</Typography>\r\n                <Typography align=\"center\" variant=\"subtitle1\" color=\"initial\">{subtitle}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Baneer;","import React from 'react'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport {Grid, Typography, makeStyles, Theme} from '@material-ui/core'\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    contactItem: {\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\"\r\n    },\r\n}));\r\n\r\nfunction Contact(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"h4\" color=\"initial\">Contactanos</Typography>\r\n                <Typography align=\"center\" variant=\"body2\" color=\"initial\">\r\n                    ¿Necesitas ayuda? / ¿Tienes una propuesta? / ¿Quisieras contribuir?\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={6} sm={3} className={classes.contactItem}>\r\n                        <FacebookIcon style={{fontSize: 90}} />\r\n                        <Typography variant=\"button\" color=\"initial\">Facebook</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} className={classes.contactItem}>\r\n                        <InstagramIcon style={{fontSize: 90}} />\r\n                        <Typography variant=\"button\"color=\"initial\">Instagram</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} className={classes.contactItem}>\r\n                        <EmailIcon style={{fontSize: 90}} />\r\n                        <Typography variant=\"button\" color=\"initial\">Email</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} className={classes.contactItem}>\r\n                        <WhatsAppIcon style={{fontSize: 90}} />\r\n                        <Typography variant=\"button\" color=\"initial\">WhatsApp</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Typography, Box, makeStyles, Theme} from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    footer:{\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.grey[500],\r\n        display: 'fixed',\r\n        bottom: 0\r\n    }\r\n}));\r\n\r\nfunction Footer(){\r\n\r\n    const classes = useStyle()\r\n\r\n    return(\r\n        <Box className={classes.footer}>\r\n            <Typography display='block' align='center' variant=\"overline\" color=\"initial\">YPZ ~ 2020</Typography>\r\n            <Typography display='block' align='center' variant=\"overline\" color=\"initial\"></Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Typography, makeStyles, Theme, Slider, Box } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    title:{\r\n        fontFamily: \"Unica One\"\r\n    },\r\n    sliderLabel:{\r\n        fontSize: 17,\r\n        fontFamily: 'Encode Sans Condensed',\r\n        fontWeight: 'bold',\r\n    },\r\n    conteSlider:{\r\n        height: 300,\r\n        display:\"flex\",\r\n        justifyContent:'center',\r\n        fontSize: 100,\r\n        marginTop: theme.spacing(4)\r\n    }\r\n}));\r\n\r\n\r\nfunction TeacherEvaluation(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <>\r\n            <Typography className={classes.title} align=\"center\" variant=\"h2\" color=\"initial\">FORMA DE EVALUAR</Typography>\r\n            <Typography align=\"center\" variant=\"subtitle1\" color=\"initial\">Gracias a tus datos, calificamos a los profesores</Typography>\r\n            <Box className={classes.conteSlider}>\r\n            <Slider\r\n                color=\"primary\"\r\n                classes={{markLabel: classes.sliderLabel}}\r\n                disabled\r\n                orientation=\"vertical\"\r\n                max={10}\r\n                aria-labelledby=\"Hola x2\"\r\n                defaultValue={[0,1,2,3,5,7,10]}\r\n                marks={[\r\n                    {value:0, label:\"+/-0 Barco\"},\r\n                    {value:1, label:\"+/-1 Respondió\"},\r\n                    {value:2, label:\"+/-1 Mandó docs/videos\"},\r\n                    {value:7, label:\"+/-1 Fue justo\"},\r\n                    {value:4, label:\"+/-2 Hizo videollamadas\"},\r\n                    {value:6, label:\"+/-2 Desaparecio\"},\r\n                    {value:10, label:\"+/-3 Aprendiste\"}\r\n                ]}\r\n            />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeacherEvaluation;","import React from 'react';\r\nimport {Typography, makeStyles, Theme, Box} from '@material-ui/core'\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    link:{\r\n        textDecoration: 'none',\r\n        color: theme.palette.secondary.dark\r\n    }\r\n}));\r\n\r\nfunction ExtraCredits(){\r\n\r\n    const classes = useStyle();\r\n\r\n    return(\r\n        <Box mb={1}>\r\n            <Typography align=\"center\" display=\"block\" variant=\"caption\" color=\"initial\">\r\n                Donkey Icon made by <a className={classes.link} href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a className={classes.link} href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExtraCredits;","import React from 'react';\r\nimport {Box, Typography, makeStyles, Theme, Container, Grid} from '@material-ui/core';\r\nimport Decalogue from '../components/info/Decalogue';\r\nimport Banner from '../components/info/Banner';\r\nimport Contact from '../components/info/Contact';\r\nimport engranes from '../resources/engranesBlancos.png';\r\nimport Footer from '../components/info/Footer';\r\nimport TeacherEvaluation from '../components/info/TeacherEvaluation';\r\nimport '../material-ui/info.css';\r\nimport ExtraCredits from '../components/info/ExtraCredits';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    textGradient: {\r\n        background: `linear-gradient(90deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.dark} 100%)`,\r\n        WebkitBackgroundClip: 'text',\r\n        WebkitTextFillColor: 'transparent',\r\n        fontWeight: 'bold',\r\n        fontSize: 50,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(3,0,3,0),\r\n    },\r\n    container1:{\r\n        background: `linear-gradient(90deg, hsl(283,60%,35%) 0%, hsl(360,60%,35%) 100%)`,\r\n        color: theme.palette.common.white,\r\n        padding: theme.spacing(2),\r\n        display:\"flex\", \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n    },\r\n    container2:{\r\n        background: `linear-gradient(90deg, hsl(360,60%,35%) 0%, hsl(283,60%,35%) 100%)`,\r\n        color: theme.palette.common.white,\r\n        padding: theme.spacing(2),\r\n        display:\"flex\", \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n    },\r\n    img:{\r\n        backgroundSize: 'cover',\r\n        height: '100px'\r\n    }\r\n}));\r\n\r\nfunction Info(){\r\n\r\n    const classes = useStyle()\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={5}>\r\n                    <Grid item xs={12} style={{display: 'block', textAlign: \"center\"}}>\r\n                        <Box className={classes.title}>\r\n                            <Typography display=\"inline\" className={classes.textGradient} variant=\"h1\" color=\"initial\">Soy Politecnico</Typography>\r\n                        </Box>\r\n                        <Decalogue/>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Box className={classes.container1} >\r\n                            <img alt=\"engranes\" className={classes.img} src={engranes} />\r\n                            <Banner \r\n                                title=\"Unete al equipo\"\r\n                                subtitle=\"Esta página es para nosotros, si sabes programar y buscas practicar o crees poder ofrecer algo más, no lo pienses y envianos un mensaje\"\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <TeacherEvaluation/>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Box className={classes.container2} >\r\n                            <Banner \r\n                                title=\"¿No encontraste tu escuela?\"\r\n                                subtitle=\"Ayudanos a completar los datos, comunicate con nosotros para obtener acceso al sistema\"\r\n                            />\r\n                            <img alt=\"engranes\" className={classes.img} src={engranes} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Contact/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ExtraCredits/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Info;\r\n\r\n/* \r\n\r\n            <JoinUs/>\r\n            \r\n            <Contact/> */","import React from 'react';\r\nimport { Container, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport tendederos from '../resources/tendederos.jpg';\r\nimport ListGossips from '../components/ListGossips';\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n  createStyles({\r\n    fab:{\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    },\r\n    container:{\r\n        height: '100%',\r\n        top: 0,\r\n        width: '100%',\r\n        position: 'fixed'\r\n    }\r\n  })\r\n)\r\n\r\nfunction Gossips(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n            <img alt=\"imageBackgound\" className={classes.container} src={tendederos}/>\r\n            <Container>\r\n                <ListGossips/>\r\n                <Link to=\"addGossip\">\r\n                    <Fab color=\"primary\" aria-label=\"add qualification button\" className={classes.fab}>\r\n                        <Add />\r\n                    </Fab>\r\n                </Link>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Gossips;","import * as yup from 'yup';\r\n\r\nexport const createGossipS = yup.object().shape({\r\n    idTeacher: yup.string().required(),\r\n    gossip: yup.string().required().max(500)\r\n})","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { createGossipS } from '../yup-schemas/gossip-schema';\r\nimport MySubmit from '../components/inputs/MySubmit';\r\nimport {Container, Typography, Grid, Box} from '@material-ui/core';\r\nimport SelectTeachers from '../components/SelectTeachers';\r\nimport MyTextArea from '../components/inputs/MyTextArea';\r\nimport formStyles from '../material-ui/formStyles';\r\nimport {useSnackbar} from 'notistack'\r\nimport {useHistory} from 'react-router-dom'\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { CreateGossipT } from '../types/gossip-type';\r\n\r\nfunction GossipForm(){\r\n\r\n    const formClasses = formStyles();\r\n    const history = useHistory();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    async function handleSubmit(values: CreateGossipT){\r\n        const res = await FETCH({method: 'POST', path:'gossip', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) history.push('gossips');\r\n    }\r\n\r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Grid container className={formClasses.containerForm} >\r\n                <Typography variant=\"h5\" color=\"initial\">Tendedero</Typography> \r\n                <Grid item xs={12}>\r\n                    <Formik\r\n                        initialValues={{idTeacher:'', gossip:''}}\r\n                        validationSchema={createGossipS}\r\n                        onSubmit={(values)=>{\r\n                            handleSubmit(values);\r\n                        }}\r\n                    >\r\n                        <Form className={formClasses.form}>\r\n                            <SelectTeachers/>\r\n                            <Box mt={2}>\r\n                                <MyTextArea label=\"Escribe aquí...\" name=\"gossip\"/>\r\n                            </Box>\r\n                            <MySubmit value=\"Enviar\"/>\r\n                        </Form>\r\n                    </Formik>\r\n                    <Box my={2} >\r\n                        <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"body2\">RECUERDA</Typography>\r\n                        <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"body2\">Estos datos son anonimos</Typography>\r\n                        <Typography color=\"textSecondary\" align=\"center\" style={{width: '100%'}} variant=\"body2\">Al guardarlos no podras borrarlos o modificarlos</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default GossipForm;","import React, {useState} from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { TableCell, IconButton } from '@material-ui/core';\r\n\r\ntype props = {\r\n    setIsUpdating: (arg0: boolean) => void\r\n    deleteFunction: () => void,\r\n    //Form Update Name\r\n    btnIdForm: string,\r\n}\r\n\r\nfunction OptionsCell({setIsUpdating, deleteFunction, btnIdForm }: props){\r\n\r\n    const [option, setOption] = useState<string | undefined>()\r\n\r\n    function clickUpdateForm(){\r\n        const btnSend =  (document.getElementById(btnIdForm) as HTMLButtonElement)\r\n        if(btnSend) btnSend.click();\r\n        setIsUpdating(false);\r\n        setOption(undefined);\r\n    }\r\n\r\n    function handleUpdateBtn(){\r\n        setIsUpdating(true);\r\n        setOption('u'); \r\n        document.addEventListener('keydown', (e)=>{\r\n            if(e.key === 'Enter'){\r\n                clickUpdateForm();\r\n            }\r\n        });\r\n    }\r\n    \r\n    function handleOption(){\r\n        switch(option){\r\n            case 'u': \r\n                clickUpdateForm();\r\n                break;\r\n            case 'd': \r\n                deleteFunction(); \r\n                setOption(undefined);\r\n            break;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <TableCell align=\"right\">\r\n            {!option ?\r\n                <>\r\n                    <IconButton aria-label=\"update\" onClick={handleUpdateBtn}>\r\n                        <CreateIcon/>\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"delete\" onClick={()=>setOption('d')}>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n                </>\r\n            : \r\n                <>\r\n                    <IconButton aria-label=\"accept\" onClick={handleOption}>\r\n                        <CheckIcon/>\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"decline\" onClick={()=>{setIsUpdating(false);setOption(undefined);}}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </>\r\n            }\r\n        </TableCell>\r\n    )\r\n}\r\n\r\nexport default OptionsCell;","import React, {useState, ChangeEvent} from 'react'\r\nimport {TableRow, TableCell, Checkbox} from '@material-ui/core'\r\nimport OptionsCell from './OptionsCell';\r\n\r\ntype props = {\r\n    xName: string,\r\n    btnIdForm: string,\r\n    deleteFunction: () => void,\r\n    updateForm: JSX.Element,\r\n    checked?: boolean | undefined,\r\n    setChecked?: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\n\r\nfunction DinamicRow({xName, btnIdForm, deleteFunction, updateForm, setChecked, checked}: props){\r\n\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    return(\r\n        <TableRow>\r\n            {setChecked?\r\n                <TableCell>\r\n                    <Checkbox\r\n                        checked={checked}\r\n                        onChange={setChecked}\r\n                        inputProps={{ 'aria-label': 'add to list to rel' }}\r\n                    />\r\n                </TableCell>\r\n            :null}\r\n            <TableCell>\r\n                {!isUpdating?\r\n                    <span>{xName}</span>\r\n                :\r\n                    {...updateForm}\r\n                }\r\n            </TableCell>\r\n            <OptionsCell setIsUpdating={setIsUpdating} btnIdForm={btnIdForm} deleteFunction={deleteFunction}/>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default DinamicRow;","import * as yup from 'yup';\r\n\r\nexport const CreateSubjectS = yup.object().shape({\r\n    subjectName: yup.string().required().max(200)\r\n})","import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport {CreateSubjectS} from '../../yup-schemas/subject-schema';\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport { SubjectT, CreateSubjectT } from '../../types/subject-type';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype props = {\r\n    subject: SubjectT,\r\n    getSubjects: () => void,\r\n}\r\n\r\nfunction UpdateForm({subject, getSubjects}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const idSubmit = `${subject._id}USubmit`\r\n\r\n    async function handleSubmit(values: CreateSubjectT){\r\n        if(subject.subjectName!==values.subjectName){\r\n            const res = await FETCH({method:'PUT', path:`subject/${subject._id}`, body:values})\r\n            enqueueSnackbar(res.message);\r\n            if(res.status===200){\r\n                getSubjects();\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{subjectName: subject.subjectName}}\r\n            validationSchema={CreateSubjectS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Subject\" name=\"subjectName\"/>\r\n                <button id={idSubmit} hidden>ENVIAR</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default UpdateForm;","import React, {useState, useEffect} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\n\r\ntype props<T> = {\r\n    data: T[] | undefined,\r\n    setFilteredData: (arg0: T[]) => void,\r\n    optionNameField: Extract<keyof T, string>,\r\n    label: string\r\n}\r\n\r\nfunction SearchBar<T>({data, setFilteredData, optionNameField, label}: props<T>){\r\n\r\n    const [searchedW, setSearchedW] = useState<string>('');\r\n\r\n    useEffect(()=> {\r\n        if(data){\r\n            if(searchedW!==''){\r\n                    const newData = data.filter(d => ((d[optionNameField] as unknown as string).toLowerCase()).includes(searchedW.toLowerCase()));\r\n                    setFilteredData(newData);\r\n            }else{\r\n                setFilteredData(data);\r\n            }\r\n        }\r\n    }, [searchedW])\r\n\r\n    return(\r\n        <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label={label}\r\n            onChange={(e) => setSearchedW(e.target.value) }\r\n        />\r\n    )\r\n\r\n    \r\n\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { useState, useEffect, ChangeEvent} from 'react';\r\nimport { Table, TableContainer, TableBody } from '@material-ui/core';\r\nimport DinamicRow from '../adminForms/DinamicRow';\r\nimport { SubjectT } from '../../types/subject-type';\r\nimport UpdateSubject from './UpdateSubject';\r\nimport SearchBar from '../adminForms/SearchBar';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {useSnackbar} from 'notistack';\r\n\r\ntype props = {\r\n    getSubjects: () => void,\r\n    subjects: SubjectT[] | undefined,\r\n    setSubjects: (arg0: SubjectT[] | undefined) => void\r\n}\r\n\r\nfunction Tabla({getSubjects, subjects, setSubjects}: props){\r\n\r\n    //fSubjects = filterSubjects\r\n    const [fSubjects, setFSubjects] = useState<SubjectT[] | undefined>(subjects);\r\n    const {enqueueSnackbar} = useSnackbar();    \r\n\r\n    useEffect(()=>{\r\n        setFSubjects(subjects);\r\n    },[subjects])\r\n\r\n    useEffect(()=>{\r\n        setSubjects(fSubjects);\r\n    },[fSubjects])\r\n\r\n    async function deleteSubject(idSubject: string){\r\n        const res = await FETCH({method:'DELETE', path:`subject/${idSubject}`});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) getSubjects();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <SearchBar data={subjects} optionNameField=\"subjectName\" setFilteredData={setFSubjects} label=\"Seach subject\"/>\r\n            <TableContainer>\r\n                <Table size=\"small\">\r\n                    <TableBody>\r\n                        {fSubjects? fSubjects.map((s: SubjectT) => (\r\n                            <DinamicRow checked={s.checked} setChecked={(e:ChangeEvent<HTMLInputElement>)=>{s.checked=e.target.checked}} updateForm={<UpdateSubject getSubjects={getSubjects} subject={s} />} deleteFunction={()=>deleteSubject(s._id)} btnIdForm={`${s._id}USubmit`} xName={s.subjectName} key={s._id} />\r\n                        )): null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Tabla;","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport {CreateSubjectS} from '../../yup-schemas/subject-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype SubjectType = {\r\n    subjectName: string,\r\n}\r\n\r\ntype props = {\r\n    getSubjects: () => void\r\n}\r\n\r\nfunction AddForm({getSubjects}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleSubmit(values: SubjectType){\r\n        const res = await FETCH({method:'POST', path: 'subject', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200) getSubjects();\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{subjectName: ''}}\r\n            validationSchema={CreateSubjectS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Subject\" name=\"subjectName\"/>\r\n                <MySubmit value=\"save\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport { useSnackbar } from 'notistack';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\ntype props = {\r\n    getRelsData: Function,\r\n    selectData: JSX.Element,\r\n    initialValues: object,\r\n    validationSchema: any,\r\n    fetchPath: (arg0: string) => string,\r\n}\r\n\r\nfunction AddRel({getRelsData, selectData, initialValues, validationSchema, fetchPath}:props){\r\n\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    function handleSubmit(values : any){\r\n        const rels = getRelsData();\r\n        if(rels && rels.length!==0){\r\n            rels.forEach(async(r:any, i:number) => {\r\n                const res = await FETCH({method:'POST', path:fetchPath(r._id), body:values});\r\n                enqueueSnackbar(res.message);\r\n            });\r\n        }else{\r\n            enqueueSnackbar('Aún no seleccionas nada')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                {selectData}\r\n                <MySubmit value=\"Link\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddRel;","import React, {useEffect, useState} from 'react';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport MySelect from '../inputs/MySelect';\r\n\r\ntype props = {\r\n    pathData: string,\r\n    name:string,\r\n    label:string,\r\n    fieldOption: string\r\n}\r\ntype optionType = {\r\n    _id: string\r\n    [fieldOption:string]: string,\r\n}\r\n\r\nfunction SelectData({pathData, name, label, fieldOption}: props){\r\n\r\n    const [subjects, setSubjects] = useState<optionType[]>()\r\n\r\n    async function getSubjects(){\r\n        const res = await FETCH({method: 'GET', path:pathData});\r\n        setSubjects(res);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getSubjects();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return(\r\n        <MySelect id={name} name={name} label={label}>\r\n            {subjects? subjects.map((s) => (\r\n                <option key={s._id} value={s._id}>{s[fieldOption]}</option>\r\n            )) : null}\r\n        </MySelect>\r\n    )\r\n}\r\n\r\nexport default SelectData;","import * as yup from 'yup';\r\n\r\nexport const RelSchoolS = yup.object().shape({\r\n    idSchool: yup.string().required()\r\n})\r\n\r\nexport const RelSubjectS = yup.object().shape({\r\n    idSubject: yup.string().required()\r\n})\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport SubjectsTable from '../components/subject/SubjectsTable';\r\nimport AddSubject from '../components/subject/AddSubject';\r\nimport { SubjectT } from '../types/subject-type';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport AddRel from '../components/adminForms/AddRelForm';\r\nimport SelectData from '../components/adminForms/SelectData';\r\nimport { RelSchoolS } from '../yup-schemas/rels-schema';\r\n\r\nfunction Subjects(){\r\n\r\n    const [subjects, setSubjects] = useState<SubjectT[]>();\r\n    const selectSchools =  <SelectData pathData='schools' name='idSchool' label=\"School\" fieldOption=\"schoolName\" />\r\n\r\n    async function getSubjects(){\r\n        const res = await FETCH({method:'GET', path:'subjects'})\r\n        setSubjects(res);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getSubjects();\r\n    },[])\r\n\r\n    function getRelSubjects(): SubjectT[] | undefined{\r\n        let res\r\n        if(subjects){\r\n            res = subjects.filter((s)=>{\r\n                if(s.checked) return true;\r\n                else return false;\r\n            })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function fetchPath(idSubject: string): string{\r\n        return `subject/${idSubject}/school`;\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={5}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">Subjects</Typography>\r\n                            <AddSubject getSubjects={getSubjects} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">School - Subjects</Typography>\r\n                            <AddRel fetchPath={fetchPath} initialValues={{idSchool: ''}} validationSchema={RelSchoolS} selectData={selectSchools} getRelsData={getRelSubjects} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={7}>\r\n                    <SubjectsTable setSubjects={setSubjects} getSubjects={getSubjects} subjects={subjects} />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Subjects;","import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport {CreateTeacherS} from '../../yup-schemas/teacher-schema';\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport { TeacherT, CreateTeacherT } from '../../types/teacher-type';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype props = {\r\n    teacher: TeacherT,\r\n    getTeachers: () => void,\r\n}\r\n\r\nfunction UpdateForm({teacher, getTeachers}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const idSubmit = `${teacher._id}USubmit`\r\n\r\n    async function handleSubmit(values: CreateTeacherT){\r\n        if(teacher.teacherName!==values.teacherName){\r\n            const res = await FETCH({method:'PUT', path:`teacher/${teacher._id}`, body:values})\r\n            enqueueSnackbar(res.message);\r\n            if(res.status===200){\r\n                getTeachers();\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{teacherName: teacher.teacherName}}\r\n            validationSchema={CreateTeacherS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Teacher\" name=\"teacherName\"/>\r\n                <button id={idSubmit} hidden>ENVIAR</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default UpdateForm;","import React, { useState, useEffect, ChangeEvent} from 'react';\r\n\r\nimport { Table, TableContainer, TableBody } from '@material-ui/core';\r\nimport DinamicRow from '../adminForms/DinamicRow';\r\nimport { TeacherT } from '../../types/teacher-type';\r\nimport UpdateTeacher from './UpdateTeacher';\r\nimport SearchBar from '../adminForms/SearchBar';\r\nimport {useSnackbar} from 'notistack';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\ntype props = {\r\n    getTeachers: () => void,\r\n    teachers: TeacherT[] | undefined\r\n}\r\n\r\nfunction Tabla({getTeachers, teachers}: props){\r\n    \r\n    //fTeachers = filterTeachers\r\n    const [fTeachers, setFTeachers] = useState<TeacherT[] | undefined>(teachers);\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    useEffect(()=>{\r\n        setFTeachers(teachers);\r\n    },[teachers])\r\n\r\n    async function deleteSubject(idTeacher: string){\r\n        const res = await FETCH({method:'DELETE', path:`teacher/${idTeacher}`});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) getTeachers();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <SearchBar data={teachers} optionNameField=\"teacherName\" setFilteredData={setFTeachers} label=\"Seach teacher\"/>\r\n            <TableContainer>\r\n                <Table size=\"small\">\r\n                    <TableBody>\r\n                        {fTeachers? fTeachers.map((t: TeacherT) => (\r\n                            <DinamicRow checked={t.checked} setChecked={(e:ChangeEvent<HTMLInputElement>)=>{t.checked=e.target.checked}} updateForm={<UpdateTeacher getTeachers={getTeachers} teacher={t} />} deleteFunction={()=>deleteSubject(t._id)} btnIdForm={`${t._id}USubmit`} xName={t.teacherName} key={t._id} />\r\n                        )): null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Tabla;","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport {CreateTeacherS} from '../../yup-schemas/teacher-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype TeacherType = {\r\n    teacherName: string,\r\n}\r\n\r\ntype props = {\r\n    getTeachers: () => void\r\n}\r\n\r\nfunction AddForm({getTeachers}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleSubmit(values: TeacherType){\r\n        const res = await FETCH({method:'POST', path: 'teacher', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) getTeachers();\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{teacherName: ''}}\r\n            validationSchema={CreateTeacherS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Teacher\" name=\"teacherName\"/>\r\n                <MySubmit value=\"save\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React, {useEffect, useState} from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport TeachersTable from '../components/teacher/TeachersTable';\r\nimport AddTeacher from '../components/teacher/AddTeacher';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport { CreateTeacherT, TeacherT } from '../types/teacher-type';\r\nimport AddRel from '../components/adminForms/AddRelForm';\r\nimport SelectData from '../components/adminForms/SelectData';\r\nimport { RelSchoolS, RelSubjectS } from '../yup-schemas/rels-schema';\r\n\r\nfunction Teachers(){\r\n\r\n    const [teachers, setTeachers] = useState<TeacherT[]>();\r\n    const selectSchools =  <SelectData pathData='schools' name='idSchool' label=\"School\" fieldOption=\"schoolName\" />\r\n    const selectSubjects =  <SelectData pathData='subjects' name='idSubject' label=\"Subject\" fieldOption=\"subjectName\" />\r\n\r\n    async function getTeachers(){\r\n        const res = await FETCH({method:'GET', path:'teachers'})\r\n        res.sort();\r\n        setTeachers(res);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getTeachers();\r\n    },[])\r\n\r\n    function getRelTeachers(): CreateTeacherT[] | undefined{\r\n        let res\r\n        if(teachers){\r\n            res = teachers.filter((t)=>{\r\n                if(t.checked) return true;\r\n                else return false;\r\n            })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function fetchPathSubject(idTeacher: string): string{\r\n        return `teacher/${idTeacher}/subject`;\r\n    }\r\n\r\n    function fetchPathSchool(idTeacher: string): string{\r\n        return `teacher/${idTeacher}/school`;\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={5}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">Teachers</Typography>\r\n                            <AddTeacher getTeachers={getTeachers} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">Teachers - School</Typography>\r\n                            <AddRel fetchPath={fetchPathSchool} initialValues={{idSchool: ''}} validationSchema={RelSchoolS} selectData={selectSchools} getRelsData={getRelTeachers}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">Teachers - Subjects</Typography>\r\n                            <AddRel fetchPath={fetchPathSubject} initialValues={{idSubject: ''}} validationSchema={RelSubjectS} selectData={selectSubjects} getRelsData={getRelTeachers}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={7}>\r\n                    <TeachersTable getTeachers={getTeachers} teachers={teachers}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Teachers;","import * as yup from 'yup';\r\n\r\nexport const CreateSchoolS = yup.object().shape({\r\n    schoolName: yup.string().required().max(50)\r\n})\r\n","import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport {CreateSchoolS} from '../../yup-schemas/school-schema';\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport { SchoolT, CreateSchoolT } from '../../types/school-type';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype props = {\r\n    school: SchoolT,\r\n    getSchools: () => void,\r\n}\r\n\r\nfunction UpdateForm({school, getSchools}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const idSubmit = `${school._id}USubmit`\r\n\r\n    async function handleSubmit(values: CreateSchoolT){\r\n        if(school.schoolName!==values.schoolName){\r\n            const res = await FETCH({method:'PUT', path:`school/${school._id}`, body:values})\r\n            enqueueSnackbar(res.message);\r\n            if(res.status===200){\r\n                getSchools();\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{schoolName: school.schoolName}}\r\n            validationSchema={CreateSchoolS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"School\" name=\"schoolName\"/>\r\n                <button id={idSubmit} hidden>ENVIAR</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default UpdateForm;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Table, TableContainer, TableBody } from '@material-ui/core';\r\nimport DinamicRow from '../adminForms/DinamicRow';\r\nimport { SchoolT } from '../../types/school-type';\r\nimport UpdateSchool from './UpdateSchool';\r\nimport SearchBar from '../adminForms/SearchBar';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {useSnackbar} from 'notistack';\r\n\r\ntype props = {\r\n    getSchools: () => void,\r\n    schools: SchoolT[] | undefined\r\n}\r\n\r\nfunction Tabla({getSchools, schools}: props){\r\n\r\n    //fSchools = filterSchools\r\n    const [fSchools, setFSchools] = useState<SchoolT[] | undefined>(schools);\r\n    const {enqueueSnackbar} = useSnackbar();    \r\n\r\n    useEffect(()=>{\r\n        setFSchools(schools);\r\n    },[schools])\r\n\r\n    async function deleteSchool(idSchool: string){\r\n        const res = await FETCH({method:'DELETE', path:`school/${idSchool}`});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) getSchools();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <SearchBar data={schools} optionNameField=\"schoolName\" setFilteredData={setFSchools} label=\"Seach school\"/>\r\n            <TableContainer>\r\n                <Table size=\"small\">\r\n                    <TableBody>\r\n                        {fSchools? fSchools.map((s: SchoolT) => (\r\n                            <DinamicRow updateForm={<UpdateSchool getSchools={getSchools} school={s} />} deleteFunction={()=>deleteSchool(s._id)} btnIdForm={`${s._id}USubmit`} xName={s.schoolName} key={s._id} />\r\n                        )): null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Tabla;","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport {CreateSchoolS} from '../../yup-schemas/school-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype SchoolType = {\r\n    schoolName: string,\r\n}\r\n\r\ntype props = {\r\n    getSchools: () => void\r\n}\r\n\r\nfunction AddForm({getSchools}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleSubmit(values: SchoolType){\r\n        const res = await FETCH({method:'POST', path: 'school', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200) getSchools();\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{schoolName: ''}}\r\n            validationSchema={CreateSchoolS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"School\" name=\"schoolName\"/>\r\n                <MySubmit value=\"save\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React, {useState, useEffect} from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport SchoolsTable from '../components/school/SchoolsTable';\r\nimport AddSchool from '../components/school/AddSchool';\r\nimport { SchoolT } from '../types/school-type';\r\nimport FETCH from '../fetchMethods/FETCH';\r\n\r\nfunction Schools(){\r\n\r\n    const [schools, setSchools] = useState<SchoolT[]>();\r\n\r\n    async function getSchools(){\r\n        const res = await FETCH({method:'GET', path:'schools'})\r\n        setSchools(res);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getSchools();\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={5}>\r\n                    <Typography align=\"center\" variant=\"h5\" color=\"initial\">Schools</Typography>\r\n                    <AddSchool getSchools={getSchools} />\r\n                </Grid>\r\n                <Grid item xs={12} md={7}>\r\n                    <SchoolsTable getSchools={getSchools} schools={schools} />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Schools;","import * as yup from 'yup';\r\n\r\nexport const createCareerS = yup.object().shape({\r\n    careerName: yup.string().required()\r\n})","import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport {createCareerS} from '../../yup-schemas/career-schema';\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport { CareerT, CreateCareerT } from '../../types/career-type';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype props = {\r\n    career: CareerT,\r\n    getCareers: () => void,\r\n}\r\n\r\nfunction UpdateForm({career, getCareers}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const idSubmit = `${career._id}USubmit`\r\n\r\n    async function handleSubmit(values: CreateCareerT){\r\n        if(career.careerName!==values.careerName){\r\n            const res = await FETCH({method:'PUT', path:`career/${career._id}`, body:values})\r\n            enqueueSnackbar(res.message);\r\n            if(res.status===200){\r\n                getCareers();\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{careerName: career.careerName}}\r\n            validationSchema={createCareerS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Career\" name=\"careerName\"/>\r\n                <button id={idSubmit} hidden>ENVIAR</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default UpdateForm;","import React, { useState, useEffect, ChangeEvent} from 'react';\r\n\r\nimport { Table, TableContainer, TableBody } from '@material-ui/core';\r\nimport { CareerT } from '../../types/career-type';\r\nimport UpdateCareer from './UpdateCareer';\r\nimport SearchBar from '../adminForms/SearchBar';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {useSnackbar} from 'notistack';\r\nimport DinamicRow from '../adminForms/DinamicRow';\r\n\r\ntype props = {\r\n    getCareers: () => void,\r\n    careers: CareerT[] | undefined\r\n}\r\n\r\nfunction Tabla({getCareers, careers}: props){\r\n\r\n    //fCareers = filterCareers\r\n    const [fCareers, setFCareers] = useState<CareerT[] | undefined>(careers);\r\n    const {enqueueSnackbar} = useSnackbar();    \r\n\r\n    useEffect(()=>{\r\n        setFCareers(careers);\r\n    },[careers])\r\n\r\n    async function deleteCareer(idCareer: string){\r\n        const res = await FETCH({method:'DELETE', path:`career/${idCareer}`});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status === 200) getCareers();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <SearchBar data={careers} optionNameField=\"careerName\" setFilteredData={setFCareers} label=\"Seach career\"/>\r\n            <TableContainer>\r\n                <Table size=\"small\">\r\n                    <TableBody>\r\n                        {fCareers? fCareers.map((s: CareerT) => (\r\n                            <DinamicRow checked={s.checked} setChecked={(e:ChangeEvent<HTMLInputElement>)=>{s.checked=e.target.checked}} updateForm={<UpdateCareer getCareers={getCareers} career={s} />} deleteFunction={()=>deleteCareer(s._id)} btnIdForm={`${s._id}USubmit`} xName={s.careerName} key={s._id} />\r\n                        )): null}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Tabla;","import React from 'react';\r\nimport {Formik, Form} from 'formik'\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport {createCareerS} from '../../yup-schemas/career-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype CareerType = {\r\n    careerName: string,\r\n}\r\n\r\ntype props = {\r\n    getCareers: () => void\r\n}\r\n\r\nfunction AddForm({getCareers}: props){\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleSubmit(values: CareerType){\r\n        const res = await FETCH({method:'POST', path: 'career', body:values});\r\n        enqueueSnackbar(res.message);\r\n        if(res.status===200) getCareers();\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{careerName: ''}}\r\n            validationSchema={createCareerS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"Career\" name=\"careerName\"/>\r\n                <MySubmit value=\"save\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React, {useState, useEffect} from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport CareersTable from '../components/career/CareersTable';\r\nimport AddCareer from '../components/career/AddCareer';\r\nimport { CareerT } from '../types/career-type';\r\nimport FETCH from '../fetchMethods/FETCH';\r\nimport AddRel from '../components/adminForms/AddRelForm';\r\nimport SelectData from '../components/adminForms/SelectData';\r\nimport { RelSchoolS } from '../yup-schemas/rels-schema';\r\n\r\nfunction Careers(){\r\n\r\n    const [careers, setCareers] = useState<CareerT[]>();\r\n    const selectSchools =  <SelectData pathData='schools' name='idSchool' label=\"School\" fieldOption=\"schoolName\" />\r\n\r\n    async function getCareers(){\r\n        const res = await FETCH({method:'GET', path:'careers'})\r\n        setCareers(res);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getCareers();\r\n    },[])\r\n\r\n    function getRelCareers(): CareerT[] | undefined{\r\n        let res\r\n        if(careers){\r\n            res = careers.filter((s)=>{\r\n                if(s.checked) return true;\r\n                else return false;\r\n            })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    function fetchPath(idCareer: string): string{\r\n        return `career/${idCareer}/school`;\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={5}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12}>\r\n                        <Typography align=\"center\" variant=\"h5\" color=\"initial\">Careers</Typography>\r\n                        <AddCareer getCareers={getCareers} />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                            <Typography align=\"center\" variant=\"h5\" color=\"initial\">Careers - Schools</Typography>\r\n                            <AddRel fetchPath={fetchPath} initialValues={{idSchool: ''}} validationSchema={RelSchoolS} selectData={selectSchools} getRelsData={getRelCareers} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} md={7}>\r\n                    <CareersTable getCareers={getCareers} careers={careers} />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Careers;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport MyTextInput from '../inputs/MyTextInput';\r\nimport MySubmit from '../inputs/MySubmit';\r\nimport { SearchNickNameS } from '../../yup-schemas/user-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { RoleUserT } from '../../types/role-type';\r\nimport {useSnackbar} from 'notistack'\r\n\r\ntype props = {\r\n    setUser: (arg0: RoleUserT | undefined) => void\r\n}\r\n\r\nfunction FormFindUser({setUser}: props){\r\n\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    async function handleSubmit({nickName}: {nickName: string}){\r\n        const res = await FETCH({method:'GET', path:`user/nickName/${nickName}/role`})\r\n        if(res.status === 200) setUser(res.user);\r\n        else {\r\n            enqueueSnackbar(res.message)\r\n            setUser(undefined);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{nickName: ''}}\r\n            validationSchema={SearchNickNameS}\r\n            onSubmit={(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n        >\r\n            <Form>\r\n                <MyTextInput label=\"NickName\" name=\"nickName\"/>\r\n                <MySubmit value=\"Buscar Usuario\"/>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default FormFindUser;","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { RoleUserT } from '../../types/role-type';\r\nimport { Formik, Form } from 'formik';\r\nimport SelectData from '../adminForms/SelectData';\r\nimport { AddRoleS } from '../../yup-schemas/user-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {useSnackbar} from 'notistack';\r\n\r\ntype props = {\r\n    user: RoleUserT\r\n}\r\n\r\nfunction FormAddRole({user}:props){\r\n\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    async function handleSubmit({idRole}: {idRole: string}){\r\n        const res = await FETCH({method:'PUT', path:`user/${user._id}/role/${idRole}`})\r\n        enqueueSnackbar(res.message);\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{idRole:''}}\r\n            onSubmit= {(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n            validationSchema={AddRoleS}\r\n        >\r\n            <Form>\r\n                <SelectData pathData='roles' name='idRole' label='Role' fieldOption= 'name' />\r\n                <Button fullWidth type=\"submit\" variant=\"outlined\" color=\"secondary\">\r\n                    Agregar Rol\r\n                </Button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default FormAddRole;","import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport SelectData from '../adminForms/SelectData';\r\nimport {Button, makeStyles, Theme } from '@material-ui/core';\r\nimport { AddRoleS } from '../../yup-schemas/user-schema';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport { RoleTableT } from '../../types/role-type';\r\n\r\ntype props = {\r\n    setUsers: (arg0: RoleTableT[] | undefined) => void\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => ({\r\n    submit: {\r\n        margin: theme.spacing(3,0,3,0),\r\n        borderRadius: theme.spacing(5),\r\n        color: theme.palette.common.white,\r\n        background: `linear-gradient(90deg, ${theme.palette.primary.dark} 0%, ${theme.palette.primary.light} 100%)`,\r\n    },\r\n}));\r\n\r\nfunction FormFindUserByRole({setUsers}: props){\r\n\r\n    const classes = useStyle();\r\n\r\n    async function handleSubmit({idRole}: {idRole: string}){\r\n        const res = await FETCH({method: 'GET', path: `users/role/${idRole}`});\r\n        setUsers(res);\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{idRole:''}}\r\n            onSubmit= {(values)=>{\r\n                handleSubmit(values);\r\n            }}\r\n            validationSchema={AddRoleS}\r\n        >\r\n            <Form>\r\n                <SelectData pathData='roles' name='idRole' label='Role' fieldOption= 'name' />\r\n                <Button className={classes.submit} fullWidth type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                    Buscar usuarios\r\n                </Button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\nexport default FormFindUserByRole;","import React, {useState} from 'react';\r\nimport {TableContainer, Table, TableBody, TableCell, TableRow, IconButton} from '@material-ui/core';\r\nimport { RoleTableT } from '../../types/role-type';\r\nimport FormFindUserByRole from './FormFindUserByRole';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nfunction UsersTable(){\r\n\r\n    const [users, setUsers] = useState<RoleTableT[]>();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    async function handleBlock(idUser:string){\r\n        const res = await FETCH({method:'PUT', path:`user/${idUser}/lock`})\r\n        enqueueSnackbar(res.message);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <FormFindUserByRole setUsers={setUsers}/>\r\n        <TableContainer>\r\n            <Table size=\"small\">\r\n                <TableBody>\r\n                    {users? users.map((u: RoleTableT) => (\r\n                        <TableRow key={u._id}>\r\n                            <TableCell>{u.nickName}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <IconButton aria-label=\"block User\" onClick={()=>handleBlock(u._id)}>\r\n                                    <BlockIcon/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    )): null}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersTable;","import React, { useState } from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport FormFindUser from '../components/roles/FormFindUser';\r\nimport { RoleUserT } from '../types/role-type';\r\nimport FormAddRole from '../components/roles/FormAddRole';\r\nimport UsersTable from '../components/roles/UsersTable';\r\n\r\nfunction Roles(){\r\n\r\n    const [user, setUser] = useState<RoleUserT>();\r\n\r\n    return(\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6} >\r\n                    <Typography align=\"center\" variant=\"h5\" color=\"initial\">Users</Typography>\r\n                    <FormFindUser setUser={setUser}/>\r\n                    {user? <FormAddRole user={user} /> :null}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} >\r\n                    <UsersTable/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport SignIn from '../pages/SignIn';\r\nimport SignUp from '../pages/SignUp';\r\nimport QualificationOnlineForm from '../pages/QualificationOnlineForm';\r\nimport TeacherSearcher from '../pages/TeacherSearcher';\r\nimport UserComments from '../pages/UserComments';\r\nimport TeacherProfile from '../pages/TeacherProfile';\r\nimport PublicRoute from './PublicRoute';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport AddTeacher from '../pages/AddTeacher';\r\nimport ResetPassword from '../pages/ResetPassword';\r\nimport NotFound from '../pages/NotFound';\r\nimport EmailResetPassword from '../pages/EmailResetPassword';\r\nimport UserSettings from '../pages/UserSettings';\r\nimport DeleteAccount from '../pages/DeleteAccount';\r\nimport Info from '../pages/Info';\r\nimport Gossips from '../pages/Gossips';\r\nimport GossipForm from '../pages/GossipForm';\r\nimport Subjects from '../pages/Subjects';\r\nimport Teachers from '../pages/Teachers';\r\nimport Schools from '../pages/Schools';\r\nimport Careers from '../pages/Careers';\r\nimport Roles from '../pages/Roles';\r\n\r\ntype props = {\r\n    setIsAuthenticated: (arg0: boolean) => void\r\n}\r\n\r\nfunction Routes({setIsAuthenticated}: props){\r\n\r\n  return(\r\n    \r\n    <Switch>\r\n\r\n        {/*Rutas Publicas*/}\r\n        <PublicRoute exact={true} path=\"/\">\r\n            <Home />\r\n        </PublicRoute>\r\n        <PublicRoute exact={true} path=\"/signIn\">\r\n            <SignIn setIsAuthenticated={setIsAuthenticated} />\r\n        </PublicRoute>\r\n        <PublicRoute exact={true} path=\"/signUp\">\r\n            <SignUp />\r\n        </PublicRoute>\r\n        <PublicRoute exact={true} path=\"/resetPassword/:idUser\">\r\n            <ResetPassword setIsAuthenticated={setIsAuthenticated}/>\r\n        </PublicRoute>\r\n        <PublicRoute exact={true} path=\"/resetPassword\">\r\n            <EmailResetPassword/>\r\n        </PublicRoute>\r\n        <PublicRoute exact={true} path=\"/info\">\r\n            <Info/>\r\n        </PublicRoute>\r\n\r\n        {/*Rutas Privadas*/}\r\n\r\n        {/*User*/}\r\n        <ProtectedRoute exact={true} path=\"/qualificationOnlineForm\">\r\n            <QualificationOnlineForm/>\r\n        </ProtectedRoute>        \r\n        <ProtectedRoute exact={true} path=\"/teacherSearcher\">\r\n            <TeacherSearcher/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/teacherProfile/:idTeacher\">\r\n            <TeacherProfile/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/gossips\">\r\n            <Gossips/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/userSettings\">\r\n            <UserSettings/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/deleteAccount\">\r\n            <DeleteAccount setIsAuthenticated={setIsAuthenticated}/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/userComments\">\r\n            <UserComments/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/addTeacher\">\r\n            <AddTeacher/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/addGossip\">\r\n            <GossipForm/>\r\n        </ProtectedRoute>\r\n\r\n        {/*Admin*/}\r\n        <ProtectedRoute exact={true} path=\"/subjects\">\r\n            <Subjects/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/teachers\">\r\n            <Teachers/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/schools\">\r\n            <Schools/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/careers\">\r\n            <Careers/>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute exact={true} path=\"/roles\">\r\n            <Roles/>\r\n        </ProtectedRoute>\r\n\r\n        {/* Not found 404 page */}\r\n        <PublicRoute exact={true} path=\"*\">\r\n            <NotFound/>\r\n        </PublicRoute>\r\n\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\n\r\ntype props = {\r\n    setIsAuthenticated: (arg0: boolean) => void;\r\n}\r\n\r\nfunction LogOutButton({setIsAuthenticated}: props){\r\n    const history = useHistory();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    function handleLogOut(){\r\n        sessionStorage.removeItem('token');\r\n        history.push('/');\r\n        setIsAuthenticated(false);\r\n        enqueueSnackbar('Good Bye...!')\r\n    }\r\n\r\n    return(\r\n        <Button onClick={handleLogOut} color=\"inherit\">LogOut</Button>\r\n    )\r\n}\r\n\r\n\r\nexport default LogOutButton;","import React, { useState, useEffect } from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport FETCH from '../../fetchMethods/FETCH';\r\n\r\nfunction NickNameText(){\r\n\r\n    const [nickName, setNickName] = useState<string>('')\r\n\r\n    async function getNickName(){\r\n        const res = await FETCH({method:'GET', path:'user/nickName'})\r\n        setNickName(res.nickName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNickName();\r\n    },[])\r\n\r\n    return(\r\n        <Button color=\"inherit\">{nickName}</Button>\r\n    )\r\n}\r\n\r\nexport default NickNameText;","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport FETCH from '../../fetchMethods/FETCH';\r\nimport {Button, makeStyles, Theme, createStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n  createStyles({\r\n    Link:{\r\n        textDecoration: 'none',\r\n        color: theme.palette.grey[400],\r\n        '&:hover':{\r\n          color: theme.palette.common.white,\r\n        }\r\n    },\r\n  })\r\n)\r\n\r\nfunction RoleLinks(){\r\n\r\n    const [role, setRole] = useState<string>();\r\n  \r\n    async function getRole(){\r\n      const res = await FETCH({method:'GET', path:'user/role'});\r\n      if(res.status===200) {\r\n        setRole(res.role)\r\n      }\r\n    }\r\n  \r\n    useEffect(()=>{\r\n      getRole()\r\n    },[])\r\n  \r\n    return(\r\n      <>\r\n        { role === 'capturer' || role === 'admin' ? <CapturerLinks/> : null}\r\n        { role === 'admin' ? <AdminLinks/> : null}\r\n      </>\r\n    )\r\n  }\r\n  \r\n  function AdminLinks(){\r\n    const classes = useStyles();\r\n    return(\r\n      <>\r\n        <Link to=\"/careers\" className={classes.Link} >\r\n          <Button color=\"inherit\">Careers</Button>\r\n        </Link>\r\n        <Link to=\"/schools\" className={classes.Link} >\r\n          <Button color=\"inherit\">Schools</Button>\r\n        </Link>\r\n        <Link to=\"/roles\" className={classes.Link} >\r\n          <Button color=\"inherit\">Roles</Button>\r\n        </Link>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  function CapturerLinks(){\r\n  \r\n    const classes = useStyles();\r\n  \r\n    return(\r\n      <>\r\n        <Link to=\"/subjects\" className={classes.Link} >\r\n          <Button color=\"inherit\">Subjects</Button>\r\n        </Link>\r\n        <Link to=\"/teachers\" className={classes.Link} >\r\n          <Button color=\"inherit\">Teachers</Button>\r\n        </Link>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default RoleLinks;","import React from 'react'\r\nimport { Toolbar, IconButton, Typography, createStyles, makeStyles, Theme, Button } from '@material-ui/core';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Link } from 'react-router-dom';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport LogOutButton from '../user/LogOutButton';\r\nimport NickNameText from '../user/NickNameText';\r\nimport RoleLinks from './RoleLinks';\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n  createStyles({\r\n    title: {\r\n        flexGrow: 1,\r\n        textDecoration: 'none',\r\n        color: theme.palette.common.white\r\n    },\r\n    appBar: {\r\n        position: \"fixed\",      \r\n    },\r\n    menuButton:{\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    Link:{\r\n        textDecoration: 'none',\r\n        color: theme.palette.grey[400],\r\n        '&:hover':{\r\n          color: theme.palette.common.white,\r\n        }\r\n    },\r\n  })\r\n)\r\n\r\ntype props = {\r\n    isAuthenticated: boolean,\r\n    setIsAuthenticated: (arg0: boolean) => void,\r\n    handleOpenDrawer: (arg0: boolean) => void\r\n}\r\n\r\nfunction MyAppBar({isAuthenticated, setIsAuthenticated, handleOpenDrawer}: props){\r\n\r\n    const classes = useStyles();\r\n\r\n    const appBarLinks = <>\r\n                          <Link to=\"/info\" className={classes.Link} >\r\n                            <Button color=\"inherit\">Info</Button>\r\n                          </Link>\r\n                        </>\r\n    const appBarLinksAuthFalse = <>\r\n                                    <Link to=\"/signIn\" className={classes.Link} >\r\n                                      <Button color=\"inherit\">Sign In</Button>\r\n                                    </Link>\r\n                                    <Link to=\"/signUp\" className={classes.Link}>\r\n                                      <Button color=\"inherit\">Sign Up</Button>\r\n                                    </Link>\r\n                                  </>\r\n    const appBarLinksAuthTrue = <>\r\n                                  <RoleLinks/>\r\n                                  <Link to=\"/teacherSearcher\" className={classes.Link} >\r\n                                    <NickNameText/>\r\n                                  </Link>\r\n                                  <Link to=\"/\" className={classes.Link} >\r\n                                    <LogOutButton setIsAuthenticated={setIsAuthenticated}/>\r\n                                  </Link>\r\n                                </>\r\n\r\n    return(\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            { isAuthenticated ? \r\n              <IconButton \r\n                onClick={() => {handleOpenDrawer(true)}}\r\n                className={classes.menuButton}\r\n                edge=\"start\" \r\n                color=\"inherit\" \r\n                aria-label=\"menu\"\r\n              >\r\n                <MenuRoundedIcon />\r\n              </IconButton>\r\n            : null}\r\n            <Link to=\"/\" className={classes.title}>\r\n              <Typography variant=\"h6\" noWrap>SOY POLITECNICO</Typography>\r\n            </Link>\r\n            {appBarLinks}\r\n            { isAuthenticated ? appBarLinksAuthTrue : appBarLinksAuthFalse }\r\n          </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default MyAppBar;","import React from 'react';\r\nimport {ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom'\r\nimport linkStyle from '../../material-ui/linkStyle';\r\n\r\ntype props = {\r\n    text: string,\r\n    to: string,\r\n    icon: any,\r\n    handleOpenDrawer: (arg0: boolean) => void\r\n}\r\n\r\nfunction DrawerListItem({text, to, icon, handleOpenDrawer} : props){\r\n    \r\n    const classes = linkStyle();\r\n\r\n    return(\r\n        <Link className={classes.link} to={to} >\r\n            <ListItem button key={text} onClick={() => {handleOpenDrawer(false)}}>\r\n                <ListItemIcon>\r\n                {icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text}/>\r\n            </ListItem>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default DrawerListItem;","import React from 'react'\r\nimport { Drawer, List } from '@material-ui/core'\r\nimport DrawerListItem from './DrawerListItem';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport MessageRoundedIcon from '@material-ui/icons/MessageRounded';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\ntype props = {\r\n    openDrawer: boolean,\r\n    handleOpenDrawer: (arg0: boolean) => void\r\n}\r\n\r\nfunction MyDrawer({openDrawer, handleOpenDrawer}: props){\r\n\r\n    const drawerList = <List>\r\n                            <DrawerListItem handleOpenDrawer={handleOpenDrawer} to=\"/teacherSearcher\" text=\"Buscador\" icon={<SearchRoundedIcon/>}/>\r\n                            <DrawerListItem handleOpenDrawer={handleOpenDrawer} to=\"/userComments\" text=\"Comentarios\" icon={<MessageRoundedIcon/>}/>\r\n                            <DrawerListItem handleOpenDrawer={handleOpenDrawer} to=\"/gossips\" text=\"Tendedero\" icon={<PostAddIcon/>}/>\r\n                            <DrawerListItem handleOpenDrawer={handleOpenDrawer} to=\"/userSettings\" text=\"Ajustes\" icon={<SettingsIcon/>}/>\r\n                        </List>\r\n\r\n    return(\r\n        <Drawer\r\n          open={openDrawer}\r\n          onClose={() => {handleOpenDrawer(false)}}\r\n        >\r\n            {drawerList} \r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default MyDrawer;","import React from \"react\";\r\nimport MyAppBar from \"./MyAppBar\";\r\nimport MyDrawer from \"./MyDrawer\";\r\n\r\ntype propsNav = {\r\n  isAuthenticated: boolean\r\n  setIsAuthenticated: (arg0: boolean) => void;\r\n}\r\n\r\nexport default function Navigation( {isAuthenticated, setIsAuthenticated} : propsNav ) {\r\n\r\n  const [openDrawer, setOpenDrawer] = React.useState(false);\r\n\r\n  function handleOpenDrawer(open: boolean) {\r\n    setOpenDrawer(open)\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <MyAppBar isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated} handleOpenDrawer={handleOpenDrawer} />\r\n        <MyDrawer openDrawer={openDrawer} handleOpenDrawer={handleOpenDrawer} />\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme, Zoom, useScrollTrigger, Fab } from '@material-ui/core'\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n    createStyles({\r\n        fab:{\r\n            position: 'fixed',\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n        }\r\n    })\r\n)\r\n  \r\nfunction ScrollTopFab() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        //back to top anchor id is from the toolbar in app.tsx\r\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\r\n                        '#back-to-top-anchor',\r\n                    );\r\n        if (anchor) {\r\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <Fab color=\"primary\" onClick={handleClick} className={classes.fab}>\r\n                <NavigationIcon />\r\n            </Fab>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nexport default ScrollTopFab;","import React from 'react';\nimport Routes from './routes/Routes';\nimport {Toolbar} from '@material-ui/core';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navigation from './components/navigation/Navigation';\nimport ScrollTopFab from './components/navigation/ScrollTopFab';\n\nfunction App(){\n\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(sessionStorage.getItem('token')? true : false);\n\n  return(\n    <Router>\n        <div>\n            \n            <Navigation isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated}/>\n\n            <Toolbar id=\"back-to-top-anchor\" style={{marginBottom: '20px'}} />\n\n            <ScrollTopFab/>\n\n            <Routes setIsAuthenticated={setIsAuthenticated} />\n        </div>\n    </Router>\n  )\n}\n\nexport default App;","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#212121',\r\n            light: '#484848',\r\n            dark: '#000000'\r\n        },\r\n        secondary: {\r\n            main: 'hsl(321.5,60%,50%)',\r\n            light: 'hsl(360,60%,50%)',\r\n            dark: 'hsl(283,60%,50%)'\r\n        },\r\n    },\r\n    overrides:{\r\n        MuiCssBaseline:{\r\n            '@global':{\r\n                \"*::-webkit-scrollbar\": {\r\n                    width: \"10px\",\r\n                },\r\n                \"*::-webkit-scrollbar-thumb\": {\r\n                    background: `linear-gradient(0deg, hsl(360,60%,30%) 0%, hsl(283,60%,30%) 100%)`,\r\n                    borderRadius: '5px',\r\n                },\r\n                \"*::-webkit-scrollbar-thumb:hover\": {\r\n                    background: \"#000000\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n  });\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './material-ui/themeConfig';\nimport { CssBaseline } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n  \n  <ThemeProvider theme={theme}>\n    <CssBaseline/>\n    <SnackbarProvider\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n    >\n      <App />\n    </SnackbarProvider>\n  </ThemeProvider>,\n  \n  document.getElementById('root')\n);\n\n/*\n<React.StrictMode>\n</React.StrictMode>,\n */"],"sourceRoot":""}